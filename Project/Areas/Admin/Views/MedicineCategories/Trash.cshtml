@model IEnumerable<Project.Areas.Admin.Models.Entities.MedicineCategory>

@{
    ViewData["Title"] = "Trash";
    Layout = "~/Areas/Admin/Views/Shared/_mainLayout.cshtml";
}

<form id="trashForm" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" name="selectedIds" id="selectedIds" />

    <ul class="flex space-x-2 rtl:space-x-reverse">
        <li>
            <a href="javascript:;" class="text-primary hover:underline">Loại thuốc</a>
        </li>
        <li class="before:content-['/'] ltr:before:mr-1 rtl:before:ml-1">
            <span>Thùng rác</span>
        </li>
    </ul>

    <div x-data="list">
        <div class="panel border-[#e0e6ed] px-0 dark:border-[#1b2e4b] mt-3">
            <div class="px-5">
                <div class="md:absolute md:top-5 ltr:md:left-5 rtl:md:right-5">
                    <div class="mb-5 flex items-center gap-2">
                        <div>
                            <button type="button" x-on:click="restore" class="btn btn-success">
                                <svg class="h-5 w-5 ltr:mr-2 rtl:ml-2" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M20 6H4M16 6L15.729 5.188C15.329 3.909 14.576 3 13.5 3H10.5C9.424 3 8.672 3.909 8.271 5.188L8 6M18 6V19C18 20.105 17.105 21 16 21H8C6.895 21 6 20.105 6 19V6H18Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                    <path opacity="0.5" d="M10 10V16M14 10V16" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                                Khôi phục
                            </button>
                        </div>
                        <div>
                            <button type="button" x-on:click="permanentDelete" class="btn btn-danger">
                                <svg class="h-5 w-5 ltr:mr-2 rtl:ml-2" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M20.5001 6H3.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" />
                                    <path d="M18.8334 8.5L18.3735 15.3991C18.1965 18.054 18.108 19.3815 17.243 20.1907C16.378 21 15.0476 21 12.3868 21H11.6134C8.9526 21 7.6222 21 6.75719 20.1907C5.89218 19.3815 5.80368 18.054 5.62669 15.3991L5.16675 8.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" />
                                    <path opacity="0.5" d="M9.5 11L10 16" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" />
                                    <path opacity="0.5" d="M14.5 11L14 16" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" />
                                    <path opacity="0.5" d="M6.5 6C6.55588 6 6.58382 6 6.60915 5.99936C7.43259 5.97849 8.15902 5.45491 8.43922 4.68032C8.44784 4.65649 8.45667 4.62999 8.47434 4.57697L8.57143 4.28571C8.65431 4.03708 8.69575 3.91276 8.75071 3.8072C8.97001 3.38607 9.37574 3.09364 9.84461 3.01877C9.96213 3 10.0932 3 10.3553 3H13.6447C13.9068 3 14.0379 3 14.1554 3.01877C14.6243 3.09364 15.03 3.38607 15.2493 3.8072C15.3043 3.91276 15.3457 4.03708 15.4286 4.28571L15.5257 4.57697C15.5433 4.62992 15.5522 4.65651 15.5608 4.68032C15.841 5.45491 16.5674 5.97849 17.3909 5.99936C17.4162 6 17.4441 6 17.5 6" stroke="currentColor" stroke-width="1.5" />
                                </svg>
                                Xóa
                            </button>
                        </div>
                        <div class="relative">
                            <div class="theme-dropdown relative" x-data="{ columnDropdown: false }" @@click.outside="columnDropdown = false">
                                <a href="javascript:;" class="btn btn-info items-center rounded-md border border-[#e0e6ed] px-4 py-2 text-sm font-semibold dark:border-[#253b5c] dark:bg-[#1b2e4b] dark:text-white-dark" @@click="columnDropdown = !columnDropdown">
                                    <svg class="h-5 w-5 ltr:mr-2 rtl:ml-2" width="24" height="24" viewBox="-25.1 0 512 512" xmlns="http://www.w3.org/2000/svg" fill="#000000">
                                        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                        <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                        <g id="SVGRepo_iconCarrier">
                                            <defs>
                                                <style>
                                                    .cls-1 {
                                                        fill: none;
                                                        stroke: #ffffff;
                                                        stroke-linecap: round;
                                                        stroke-linejoin: round;
                                                        stroke-width: 20px;
                                                    }
                                                </style>
                                            </defs>
                                            <g data-name="Layer 2" id="Layer_2">
                                                <g data-name="E456, Column, data, search" id="E456_Column_data_search">
                                                    <rect class="cls-1" height="492" width="164.48" x="10" y="10"></rect>
                                                    <rect class="cls-1" height="213.91" width="164.48" x="10" y="149.04"></rect>
                                                    <polyline class="cls-1" points="341.35 249.53 341.35 502 176.87 502 176.87 10 341.35 10 341.35 82.16"></polyline>
                                                    <polyline class="cls-1" points="341.35 249.53 341.35 362.95 176.87 362.95 176.87 149.04 239.54 149.04"></polyline>
                                                    <circle class="cls-1" cx="323.45" cy="165.85" r="85.57"></circle>
                                                    <line class="cls-1" x1="387.62" x2="451.8" y1="230.02" y2="304.89"></line>
                                                </g>
                                            </g>
                                        </g>
                                    </svg>
                                    Cột
                                </a>
                                <div class="absolute top-11 z-[10] hidden w-[100px] min-w-[150px] rounded bg-white py-2 text-dark shadow ltr:left-0 rtl:right-0 dark:bg-[#1b2e4b] dark:text-white-light" :class="columnDropdown && '!block'">
                                    <ul class="space-y-2 px-4 font-semibold">
                                        <template x-for="(col, i) in columns" :key="i">
                                            <li>
                                                <div class="flex items-center">
                                                    <label class="cursor-pointer flex items-center">
                                                        <input type="checkbox" class="form-checkbox" :id="`chk-col-${i}`" :value="i" @@change="showHideColumns(i, $event.target.checked)" :checked="!col.hidden">
                                                        <span class="ltr:ml-2 rtl:mr-2 whitespace-nowrap" x-text="col.name"></span>
                                                    </label>
                                                </div>
                                            </li>
                                        </template>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="medicineTable" class="table-striped table-hover">
                        <thead>
                            <tr>
                                <th><input type="checkbox" class="form-checkbox" /></th>
                                <th>Mã loại thuốc</th>
                                <th>Tên loại thuốc</th>
                                <th>Trạng thái</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</form>

<script src="~/Public/assets/js/simple-datatables.js"></script>

<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('list', () => ({
            params: {
                id: null,
                code: '',
                name: '',
                status: false,
            },
            categoryList: @Html.Raw(Json.Serialize(Model)),
            filteredCategoriesList: [],
            selectedRows: [],
            datatable: null,
            columns: [
                { name: 'Hộp chọn', hidden: false },
                { name: 'Mã loại thuốc', hidden: false },
                { name: 'Tên loại thuốc', hidden: false },
                { name: 'Trạng thái', hidden: false },
                { name: 'Thao tác', hidden: false }
            ],
            hideCols: [],
            showCols: [0, 1, 2, 3, 4],

            init() {
                if (!Array.isArray(this.categoryList)) {
                    this.categoryList = [];
                }
                this.filteredCategoriesList = [...this.categoryList];
                this.initializeTable();

                // Xử lý checkbox chính (chọn tất cả)
                const mainCheckbox = document.querySelector('#medicineTable thead input[type="checkbox"]');
                mainCheckbox.addEventListener('change', (e) => {
                    const checkboxes = document.querySelectorAll('#medicineTable tbody input[type="checkbox"]');
                    checkboxes.forEach(checkbox => {
                        checkbox.checked = e.target.checked;
                        this.updateSelectedRows(checkbox);
                    });
                });

                // Xử lý checkbox từng hàng
                document.querySelector('#medicineTable tbody').addEventListener('change', (e) => {
                    if (e.target.type === 'checkbox') {
                        this.updateSelectedRows(e.target);
                    }
                });
            },

            updateSelectedRows(checkbox) {
                const id = checkbox.value;
                if (checkbox.checked) {
                    if (!this.selectedRows.includes(id)) {
                        this.selectedRows.push(id);
                    }
                } else {
                    this.selectedRows = this.selectedRows.filter(rowId => rowId !== id);
                }
            },

            initializeTable() {
                const tableData = this.filteredCategoriesList.map(category => [
                    `<input type="checkbox" class="form-checkbox" value="${category.id}" />`,
                    category.code,
                    category.name,
                    category.status ? '<span class="badge badge-outline-success">Đang hoạt động</span>' : '<span class="badge badge-outline-danger">Không hoạt động</span>',
                    `<div class="flex gap-3 items-center justify-center">
                        <a href="/Admin/MedicineCategories/Details/${category.id}" class="hover:text-primary" x-tooltip="Xem chi tiết">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-5 h-5">
                                <path opacity="0.5" d="M3.27489 15.2957C2.42496 14.1915 2 13.6394 2 12C2 10.3606 2.42496 9.80853 3.27489 8.70433C4.97196 6.49956 7.81811 4 12 4C16.1819 4 19.028 6.49956 20.7251 8.70433C21.575 9.80853 22 10.3606 22 12C22 13.6394 21.575 14.1915 20.7251 15.2957C19.028 17.5004 16.1819 20 12 20C7.81811 20 4.97196 17.5004 3.27489 15.2957Z" stroke="currentColor" stroke-width="1.5"></path>
                                <path d="M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z" stroke="currentColor" stroke-width="1.5"></path>
                            </svg>
                        </a>
                    </div>`
                ]);

                this.datatable = new simpleDatatables.DataTable('#medicineTable', {
                    data: {
                        headings: ['<input type="checkbox" class="form-checkbox" />', 'Mã loại thuốc', 'Tên loại thuốc', 'Trạng thái', 'Thao tác'],
                        data: tableData
                    },
                    perPage: 10,
                    perPageSelect: [10, 20, 30, 50, 100],
                    firstLast: true,
                    firstText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M13 19L7 12L13 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path opacity="0.5" d="M16.9998 19L10.9998 12L16.9998 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    lastText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M11 19L17 12L11 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path opacity="0.5" d="M6.99976 19L12.9998 12L6.99976 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    prevText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M15 5L9 12L15 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    nextText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M9 5L15 12L9 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    labels: {
                        perPage: "<span class='ml-2'>{select}</span>",
                        noRows: 'Không có dữ liệu'
                    },
                    layout: {
                        top: '{search}',
                        bottom: '{info}{select}{pager}'
                    },
                    columns: [
                        {
                            select: 0,
                            sortable: false,
                            render: (data, cell, row) => {
                                return data;
                            }
                        },
                        {
                            select: 4,
                            sortable: false,
                            render: (data, cell, row) => {
                                return data;
                            }
                        }
                    ],
                });

                let cols = this.datatable.columns();
                cols.hide(this.hideCols);
                cols.show(this.showCols);
            },

            showHideColumns(col, isChecked) {
                this.columns[col].hidden = !isChecked;
                if (isChecked) {
                    this.showCols.push(col);
                    this.hideCols = this.hideCols.filter(d => d !== col);
                } else {
                    this.hideCols.push(col);
                    this.showCols = this.showCols.filter(d => d !== col);
                }
                let headers = this.datatable.columns();
                headers.hide(this.hideCols);
                headers.show(this.showCols);
            },

            restore() {
                if (this.selectedRows.length === 0) {
                    new Notyf().error("Vui lòng chọn ít nhất một loại thuốc để khôi phục.");
                    return;
                }
                document.getElementById('selectedIds').value = this.selectedRows.join(',');
                document.getElementById('trashForm').action = '/Admin/MedicineCategories/Restore';
                document.getElementById('trashForm').submit();
            },

            permanentDelete() {
                if (this.selectedRows.length === 0) {
                    new Notyf().error("Vui lòng chọn ít nhất một loại thuốc để xóa.");
                    return;
                }
                if (confirm('Bạn có chắc chắn muốn xóa vĩnh viễn các loại thuốc này?')) {
                    document.getElementById('selectedIds').value = this.selectedRows.join(',');
                    document.getElementById('trashForm').action = '/Admin/MedicineCategories/PermanentDelete';
                    document.getElementById('trashForm').submit();
                }
            }
        }));
    });
</script>

<style>
    #medicineTable th,
    #medicineTable td {
        text-align: center;
    }

    .theme-dropdown .whitespace-nowrap {
        white-space: nowrap;
    }
</style>