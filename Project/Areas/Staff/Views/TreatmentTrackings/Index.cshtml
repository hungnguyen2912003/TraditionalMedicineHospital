@model IEnumerable<Project.Areas.Staff.Models.ViewModels.TreatmentTrackingViewModel>

@{
    ViewData["Title"] = "Danh sách theo dõi điều trị";
    Layout = "~/Views/Shared/_mainAdminLayout.cshtml";
}

<div class="overlay" id="loadingOverlay">
    <span
        class="animate-spin border-8 border-[#f1f2f3] border-l-primary rounded-full w-14 h-14 inline-block align-middle"></span>
</div>

<form id="indexForm" method="post" asp-action="MoveToTrash">
    @Html.AntiForgeryToken()
    <input type="hidden" name="selectedIds" id="selectedIds" />

    <ul class="flex space-x-2 rtl:space-x-reverse">
        <li>
            <a href="javascript:;" class="text-primary hover:underline">Theo dõi điều trị</a>
        </li>
        <li class="before:content-['/'] ltr:before:mr-1 rtl:before:ml-1">
            <span>Danh sách</span>
        </li>
    </ul>

    <div x-data="list">
        <div class="panel border-[#e0e6ed] px-0 dark:border-[#1b2e4b] mt-3">
            <div class="px-5">
                <div class="text-2xl font-bold mb-6">Danh sách theo dõi điều trị</div>
                <hr class="mb-6">
                <div class="flex flex-wrap items-center justify-between gap-4 mb-5">
                    <div class="flex w-full flex-col gap-4 sm:w-auto sm:flex-row sm:items-center sm:gap-3">
                        <div>
                            <a href="javascript:;" id="btnAddTracking" class="btn btn-primary"
                                @@click = "openTrackingModal" >
                                <svg width="24" height="24" class="h-5 w-5 ltr:mr-2 rtl:ml-2" viewBox="0 0 24 24"
                                    fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                    <g id="SVGRepo_iconCarrier">
                                        <g id="Edit / Add_Plus_Circle">
                                            <path id="Vector"
                                                d="M8 12H12M12 12H16M12 12V16M12 12V8M12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21Z"
                                                stroke="#ffffff" stroke-width="2" stroke-linecap="round"
                                                stroke-linejoin="round"></path>
                                        </g>
                                    </g>
                                </svg>
                                Thêm theo dõi
                            </a>
                        </div>
                    </div>
                    <div class="flex w-1/2 flex-col gap-4 sm:w-auto sm:flex-row sm:items-center sm:gap-3">
                        <div class="flex gap-3">
                            <button type="button" class="btn btn-primary gap-2" @@click="print">
                                <svg width="24" height="24" viewbox="0 0 24 24" fill="none"
                                    xmlns="http://www.w3.org/2000/svg" class="h-5 w-5">
                                    <path
                                        d="M6 17.9827C4.44655 17.9359 3.51998 17.7626 2.87868 17.1213C2 16.2426 2 14.8284 2 12C2 9.17157 2 7.75736 2.87868 6.87868C3.75736 6 5.17157 6 8 6H16C18.8284 6 20.2426 6 21.1213 6.87868C22 7.75736 22 9.17157 22 12C22 14.8284 22 16.2426 21.1213 17.1213C20.48 17.7626 19.5535 17.9359 18 17.9827"
                                        stroke="currentColor" stroke-width="1.5"></path>
                                    <path opacity="0.5" d="M9 10H6" stroke="currentColor" stroke-width="1.5"
                                        stroke-linecap="round"></path>
                                    <path d="M19 14L5 14" stroke="currentColor" stroke-width="1.5"
                                        stroke-linecap="round"></path>
                                    <path
                                        d="M18 14V16C18 18.8284 18 20.2426 17.1213 21.1213C16.2426 22 14.8284 22 12 22C9.17157 22 7.75736 22 6.87868 21.1213C6 20.2426 6 18.8284 6 16V14"
                                        stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                    <path opacity="0.5"
                                        d="M17.9827 6C17.9359 4.44655 17.7626 3.51998 17.1213 2.87868C16.2427 2 14.8284 2 12 2C9.17158 2 7.75737 2 6.87869 2.87868C6.23739 3.51998 6.06414 4.44655 6.01733 6"
                                        stroke="currentColor" stroke-width="1.5"></path>
                                    <circle opacity="0.5" cx="17" cy="10" r="1" fill="currentColor"></circle>
                                    <path opacity="0.5" d="M15 16.5H9" stroke="currentColor" stroke-width="1.5"
                                        stroke-linecap="round"></path>
                                    <path opacity="0.5" d="M13 19H9" stroke="currentColor" stroke-width="1.5"
                                        stroke-linecap="round"></path>
                                </svg>
                                In
                            </button>
                            <button type="button" class="btn btn-success gap-2">
                                <svg width="24" height="24" viewbox="0 0 24 24" fill="none"
                                    xmlns="http://www.w3.org/2000/svg" class="h-5 w-5">
                                    <path opacity="0.5"
                                        d="M17 9.00195C19.175 9.01406 20.3529 9.11051 21.1213 9.8789C22 10.7576 22 12.1718 22 15.0002V16.0002C22 18.8286 22 20.2429 21.1213 21.1215C20.2426 22.0002 18.8284 22.0002 16 22.0002H8C5.17157 22.0002 3.75736 22.0002 2.87868 21.1215C2 20.2429 2 18.8286 2 16.0002L2 15.0002C2 12.1718 2 10.7576 2.87868 9.87889C3.64706 9.11051 4.82497 9.01406 7 9.00195"
                                        stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                    <path d="M12 2L12 15M12 15L9 11.5M12 15L15 11.5" stroke="currentColor"
                                        stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                </svg>
                                Tải xuống
                            </button>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="myTable" class="table-striped table-hover"></table>
                </div>
            </div>
        </div>
    </div>
</form>

<div id="trackingModal" class="fixed inset-0 z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-5xl p-6 relative modal-content-animate">
        <div id="modalRoomTitle" class="text-2xl font-bold text-green-700 text-center mb-4"></div>
        <table class="w-full text-center mb-4">
            <thead>
                <tr>
                    <th style="text-align:center;">STT</th>
                    <th style="text-align:center;">Tên bệnh nhân</th>
                    <th style="text-align:center;">Trạng thái</th>
                    <th style="text-align:center;">Ghi chú</th>
                    <th style="text-align:center;">Thao tác</th>
                </tr>
            </thead>
            <tbody id="modalPatientTableBody"></tbody>
        </table>
        <div class="flex justify-center">
            <button id="closeTrackingModal" class="btn btn-secondary px-8 py-2 text-base">ĐÓNG</button>
        </div>
    </div>
</div>

<script>

    document.addEventListener('alpine:init', () => {
        Alpine.data('list', () => ({
            entityList: @Html.Raw(Json.Serialize(Model)),
            filteredList: [],
            selectedRows: [],
            datatable: null,

            init() {
                if (!Array.isArray(this.entityList)) {
                    this.entityList = [];
                }
                this.filteredList = [...this.entityList];
                this.initializeTable();

                document.querySelector('#myTable thead').addEventListener('change', (e) => {
                    if (e.target.type === 'checkbox') {
                        this.selectedRows = [];
                        const checkboxes = document.querySelectorAll('#myTable tbody input[type="checkbox"]');
                        checkboxes.forEach(checkbox => {
                            checkbox.checked = e.target.checked;
                            if (e.target.checked) {
                                if (!this.selectedRows.includes(checkbox.value)) {
                                    this.selectedRows.push(checkbox.value);
                                }
                            }
                        });
                    }
                });

                document.querySelector('#myTable tbody').addEventListener('change', (e) => {
                    if (e.target.type === 'checkbox') {
                        const checkbox = e.target;
                        const id = checkbox.value;
                        if (checkbox.checked) {
                            if (!this.selectedRows.includes(id)) {
                                this.selectedRows.push(id);
                            }
                        } else {
                            this.selectedRows = this.selectedRows.filter(rowId => rowId !== id);
                        }
                        const allCheckboxes = document.querySelectorAll('#myTable tbody input[type="checkbox"]');
                        const allChecked = Array.from(allCheckboxes).every(chk => chk.checked);
                        const mainCheckbox = document.querySelector('#myTable thead input[type="checkbox"]');
                        mainCheckbox.checked = allChecked;
                    }
                });

                document.querySelector('#myTable tbody').addEventListener('click', (e) => {
                    const deleteBtn = e.target.closest('.delete-btn');
                    if (deleteBtn) {
                        const id = deleteBtn.getAttribute('data-id');
                        this.moveSingleToTrash(id);
                    }
                });
            },

            initializeTable() {
                const tableData = this.filteredList.map(entity => [
                    `<input type="checkbox" class="form-checkbox" value="${entity.id}" />`,
                    entity.code,
                    entity.patientName,
                    new Date(entity.trackingDate).toLocaleDateString('vi-VN'),
                    this.getTrackingStatusBadge(entity.status),
                    entity.isActive ?
                        '<svg x-tooltip="Đang hoạt động" class="w-5 h-5 mx-auto" width="24" height="24" fill="#000000" viewBox="0 0 14 14" role="img" focusable="false" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill="green" d="M13 4.1974q0 .3097-.21677.5265L7.17806 10.329l-1.0529 1.0529q-.21677.2168-.52645.2168-.30968 0-.52645-.2168L4.01935 10.329 1.21677 7.5264Q1 7.3097 1 7t.21677-.5265l1.05291-1.0529q.21677-.2167.52645-.2167.30968 0 .52645.2167l2.27613 2.2839 5.07871-5.0864q.21677-.2168.52645-.2168.30968 0 .52645.2168l1.05291 1.0529Q13 3.8877 13 4.1974z"></path></g></svg>'
                        :
                        '<svg x-tooltip="Không hoạt động" class="w-5 h-5 mx-auto" width="24" height="24" fill="#000000" viewBox="0 0 14 14" role="img" focusable="false" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill="red" d="M13 10.65657q0 .40404-.28283.68686l-1.37374 1.37374Q11.06061 13 10.65657 13t-.68687-.28283L7 9.74747l-2.9697 2.9697Q3.74747 13 3.34343 13q-.40404 0-.68686-.28283l-1.37374-1.37374Q1 11.06061 1 10.65657t.28283-.68687L4.25253 7l-2.9697-2.9697Q1 3.74747 1 3.34343q0-.40404.28283-.68686l1.37374-1.37374Q2.93939 1 3.34343 1t.68687.28283L7 4.25253l2.9697-2.9697Q10.25253 1 10.65657 1q.40404 0 .68686.28283l1.37374 1.37374Q13 2.93939 13 3.34343t-.28283.68687L9.74747 7l2.9697 2.9697Q13 10.25253 13 10.65657z"></path></g></svg>',
                    `<div class="flex gap-4">
                        <a href="/Staff/TreatmentTrackings/Edit/${entity.id}" class="hover:text-info" x-tooltip="Chỉnh sửa">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5">
                                <path opacity="0.5" d="M22 10.5V12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2H13.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                <path d="M17.3009 2.80624L16.652 3.45506L10.6872 9.41993C10.2832 9.82394 10.0812 10.0259 9.90743 10.2487C9.70249 10.5114 9.52679 10.7957 9.38344 11.0965C9.26191 11.3515 9.17157 11.6225 8.99089 12.1646L8.41242 13.9L8.03811 15.0229C7.9492 15.2897 8.01862 15.5837 8.21744 15.7826C8.41626 15.9814 8.71035 16.0508 8.97709 15.9619L10.1 15.5876L11.8354 15.0091C12.3775 14.8284 12.6485 14.7381 12.9035 14.6166C13.2043 14.4732 13.4886 14.2975 13.7513 14.0926C13.9741 13.9188 14.1761 13.7168 14.5801 13.3128L20.5449 7.34795L21.1938 6.69914C22.2687 5.62415 22.2687 3.88124 21.1938 2.80624C20.1188 1.73125 18.3759 1.73125 17.3009 2.80624Z" stroke="currentColor" stroke-width="1.5"></path>
                                <path opacity="0.5" d="M16.6522 3.45508C16.6522 3.45508 16.7333 4.83381 17.9499 6.05034C19.1664 7.26687 20.5451 7.34797 20.5451 7.34797M10.1002 15.5876L8.4126 13.9" stroke="currentColor" stroke-width="1.5"></path>
                            </svg>
                        </a>
                    </div>`
                ]);

                this.datatable = new simpleDatatables.DataTable('#myTable', {
                    data: {
                        headings: [
                            '<input type="checkbox" class="form-checkbox" />',
                            'Mã theo dõi điều trị',
                            'Tên bệnh nhân',
                            'Ngày theo dõi',
                            'Trạng thái',
                            'Hoạt động',
                            'Thao tác'
                        ],
                        data: tableData
                    },
                    perPage: 10,
                    perPageSelect: [10, 20, 30, 50, 100],
                    firstLast: true,
                    searchable: true,
                    firstText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M13 19L7 12L13 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path opacity="0.5" d="M16.9998 19L10.9998 12L16.9998 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    lastText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M11 19L17 12L11 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path opacity="0.5" d="M6.99976 19L12.9998 12L6.99976 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    prevText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M15 5L9 12L15 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    nextText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M9 5L15 12L9 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    labels: {
                        perPage: "<span class='ml-2'>{select}</span>",
                        noRows: 'Không có dữ liệu'
                    },
                    layout: {
                        top: '{search}',
                        bottom: '{info}{select}{pager}'
                    },
                    columns: [
                        {
                            select: 0,
                            sortable: false,
                            render: (data, cell, row) => {
                                return data;
                            }
                        },
                        {
                            select: 5,
                            sortable: false,
                            render: (data, cell, row) => {
                                return data;
                            }
                        },
                        {
                            select: 6,
                            sortable: false,
                            render: (data, cell, row) => {
                                return data;
                            }
                        }
                    ],
                });
            },

            moveToTrash() {
                if (this.selectedRows.length === 0) {
                    notyf.error('Vui lòng chọn ít nhất một theo dõi điều trị để đưa vào thùng rác.');
                    return;
                }

                $.confirm({
                    title: 'Bạn có chắc chắn?',
                    content: 'Bạn có muốn đưa các theo dõi điều trị vào thùng rác không?',
                    icon: 'fa fa-question-circle text-blue-500',
                    theme: 'modern',
                    type: 'blue',
                    boxWidth: '400px',
                    useBootstrap: false,
                    buttons: {
                        confirm: {
                            text: 'Có, hãy thực hiện!',
                            btnClass: 'btn-success',
                            action: () => {
                                document.getElementById('selectedIds').value = this.selectedRows.join(',');
                                document.getElementById('indexForm').submit();
                            }
                        },
                        cancel: {
                            text: 'Hủy',
                            btnClass: 'btn-secondary'
                        }
                    }
                });
            },

            moveSingleToTrash(id) {
                $.confirm({
                    title: 'Bạn có chắc chắn?',
                    content: 'Bạn có muốn đưa theo dõi điều trị này vào thùng rác không?',
                    icon: 'fa fa-question-circle text-blue-500',
                    theme: 'modern',
                    type: 'blue',
                    boxWidth: '400px',
                    useBootstrap: false,
                    buttons: {
                        confirm: {
                            text: 'Có, hãy thực hiện!',
                            btnClass: 'btn-success',
                            action: () => {
                                document.getElementById('selectedIds').value = id;
                                document.getElementById('indexForm').submit();
                            }
                        },
                        cancel: {
                            text: 'Hủy',
                            btnClass: 'btn-secondary'
                        }
                    }
                });
            },

            openTrackingModal() {
                const today = new Date();
                const day = String(today.getDate()).padStart(2, '0');
                const month = String(today.getMonth() + 1).padStart(2, '0');
                const year = today.getFullYear();
                const dateStr = `${year}-${month}-${day}`;

                $('#trackingModal').removeClass('hidden closing');
                $('.modal-content-animate', '#trackingModal').removeClass('animate__fadeOut');
                $('#modalRoomTitle').html(`Ngày ${day}/${month}/${year} – Phòng ...`);

                $.get('/api/trackings/room-name', function (data) {
                    $('#modalRoomTitle').html(`Ngày ${day}/${month}/${year} – Phòng ${data.roomName}`);
                    $('#trackingModal').data('room-id', data.roomId);
                });

                $.get(`/api/trackings/patients-in-room?date=${dateStr}`, function (patients) {
                    let rows = '';
                    if (patients.length === 0) {
                        rows = `<tr><td colspan="5" style="text-align:center;color:#888;font-style:italic;">Không còn bệnh nhân nào cần chấm theo dõi trong ngày hôm nay</td></tr>`;
                    } else {
                        patients.forEach((patient, idx) => {
                            rows += `
                                <tr data-patient-name="${patient.name}" data-patient-id="${patient.id}">
                                    <td>${idx + 1}</td>
                                    <td>${patient.name}</td>
                                    <td>
                                        <div class="btn-group d-flex justify-content-center" style="display:flex;gap:8px;">
                                            <button class="btn btn-success btn-status" data-status="1">Có khám</button>
                                            <button class="btn btn-warning btn-status" data-status="2">Xin phép</button>
                                            <button class="btn btn-danger btn-status" data-status="3">Không khám</button>
                                        </div>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control note-input" placeholder="Nhập ghi chú..." />
                                    </td>
                                    <td>
                                        <button class="btn btn-primary btn-save">Lưu</button>
                                    </td>
                                </tr>
                            `;
                        });
                    }
                    $('#modalPatientTableBody').html(rows);
                });
            },

            getTrackingStatusBadge(status) {
                let text = getEnumDisplayName('TrackingStatus', status);
                let style = '';
                switch (status) {
                    case 1: // Có khám
                        style = 'background:#22c55e;color:white;'; // xanh lá cây
                        break;
                    case 2: // Xin phép
                        style = 'background:#f59e42;color:white;'; // vàng cam
                        break;
                    case 3: // Không khám
                        style = 'background:#ef4444;color:white;'; // đỏ
                        break;
                    default:
                        style = 'background:#a3a3a3;color:white;'; // xám
                }
                return `<span style="display:inline-block;min-width:80px;text-align:center;${style}border-radius:6px;padding:4px 12px;font-size:13px;font-weight:bold;">${text}</span>`;
            }
        }));
    });
</script>

@if (TempData["SuccessMessage"] != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            notyf.success('@Html.Raw(TempData["SuccessMessage"])');
        });
    </script>
}
@if (TempData["ErrorMessage"] != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            notyf.error('@Html.Raw(TempData["ErrorMessage"])');
        });
    </script>
}

<style>
    #modalPatientTableBody th {
        text-align: center;
    }

    .btn-status.active-status {
        filter: none;
        opacity: 1;
        box-shadow: 0 0 0 2px #3333;
        font-weight: bold;
    }

    .btn-status:not(.active-status) {
        opacity: 0.5;
        filter: grayscale(30%);
    }

    #trackingModal {
        background: rgba(30, 41, 59, 0.2);
        backdrop-filter: blur(6px);
        -webkit-backdrop-filter: blur(6px);
    }

    /* Hiệu ứng mở (fade + scale) */
    @@keyframes modalFadeIn
    {
            from {
                opacity: 0;
                transform: scale(0.95);
            }

            to {
                opacity: 1;
                transform: scale(1);
            }
        }

        @@keyframes modalFadeOut
        {
                from {
                    opacity: 1;
                    transform: scale(1);
                }

                to {
                    opacity: 0;
                    transform: scale(0.95);
                }
            }

            #trackingModal .modal-content-animate {
                animation: modalFadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            }

            #trackingModal.closing .modal-content-animate {
                animation: modalFadeOut 0.2s cubic-bezier(0.4, 0, 0.2, 1);
            }
        </style>

        <script>
            $(document).on('click', '.btn-status', function () {
                var $row = $(this).closest('tr');
                if ($(this).hasClass('active-status')) {
                    // Nếu đã active thì bỏ chọn
                    $(this).removeClass('active-status');
                } else {
                    // Nếu chưa active thì chuyển active
                    $row.find('.btn-status').removeClass('active-status');
                    $(this).addClass('active-status');
                }
            });
        </script>

        <script>
            $(document).on('click', '.btn-save', function (e) {
                e.preventDefault();
                var $row = $(this).closest('tr');
                var patientId = $row.data('patient-id');
                var roomId = $('#trackingModal').data('room-id');
                var statusBtn = $row.find('.btn-status.active-status');
                if (statusBtn.length === 0) {
                    notyf.error('Vui lòng chọn trạng thái!');
                    return;
                }
                var status = statusBtn.data('status');
                var note = $row.find('.note-input').val();
                var trackingDate = new Date().toISOString();

                // Log dữ liệu gửi đi
                console.log({
                    patientId: patientId,
                    roomId: roomId,
                    status: status,
                    note: note,
                    trackingDate: trackingDate
                });

                fetch('/api/trackings', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        patientId: patientId,
                        roomId: roomId,
                        status: status,
                        note: note,
                        trackingDate: trackingDate
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success !== false) {
                            notyf.success('Lưu thành công!');
                        } else {
                            notyf.error(data.message || 'Lưu thất bại!');
                        }
                    })
                    .catch(() => {
                        notyf.error('Có lỗi khi gửi dữ liệu!');
                    });
            });
        </script>

        <script>
            $(document).on('click', '#closeTrackingModal', function () {
                $('#trackingModal').addClass('closing');
                setTimeout(function () {
                    $('#trackingModal').addClass('hidden').removeClass('closing');
                }, 200); // Thời gian trùng với animation out
            });
        </script>