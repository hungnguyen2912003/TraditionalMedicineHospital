@model IEnumerable<Project.Areas.Staff.Models.ViewModels.TreatmentRecordViewModel>

@{
    ViewData["Title"] = "Danh sách phiếu điều trị";
    Layout = "~/Views/Shared/_mainAdminLayout.cshtml";
}

<div class="overlay" id="loadingOverlay">
    <span
        class="animate-spin border-8 border-[#f1f2f3] border-l-primary rounded-full w-14 h-14 inline-block align-middle"></span>
</div>

<form id="indexForm" method="post" asp-action="MoveToTrash">
    @Html.AntiForgeryToken()
    <input type="hidden" name="selectedIds" id="selectedIds" />

    <ul class="flex space-x-2 rtl:space-x-reverse">
        <li>
            <a href="javascript:;" class="text-primary hover:underline">Đợt điều trị</a>
        </li>
        <li class="before:content-['/'] ltr:before:mr-1 rtl:before:ml-1">
            <span>Danh sách</span>
        </li>
    </ul>

    <div x-data="list">
        <div class="panel border-[#e0e6ed] px-0 dark:border-[#1b2e4b] mt-3">
            <div class="px-5">
                <div class="text-2xl font-bold mb-6">Danh sách phiếu điều trị</div>
                <hr class="mb-6">
                <div class="flex flex-wrap items-center justify-between gap-4 mb-5">
                    <div class="flex w-full flex-col gap-4 sm:w-auto sm:flex-row sm:items-center sm:gap-3">
                        <button type="button" x-on:click="moveToTrash" class="btn btn-warning">
                            <svg class="h-5 w-5 ltr:mr-2 rtl:ml-2" viewBox="0 0 24 24" fill="none"
                                xmlns="http://www.w3.org/2000/svg">
                                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                <g id="SVGRepo_iconCarrier">
                                    <path
                                        d="M12 10V17M8 10V17M19 9H22M19 14H22M19 19H21M16 6V16.2C16 17.8802 16 18.7202 15.673 19.362C15.3854 19.9265 14.9265 20.3854 14.362 20.673C13.7202 21 12.8802 21 11.2 21H8.8C7.11984 21 6.27976 21 5.63803 20.673C5.07354 20.3854 4.6146 19.9265 4.32698 19.362C4 18.7202 4 17.8802 4 16.2V6M2 6H18M14 6L13.7294 5.18807C13.4671 4.40125 13.3359 4.00784 13.0927 3.71698C12.8779 3.46013 12.6021 3.26132 12.2905 3.13878C11.9376 3 11.523 3 10.6936 3H9.30643C8.47705 3 8.06236 3 7.70951 3.13878C7.39792 3.26132  7.12208 3.46013 6.90729 3.71698C6.66405 4.00784 6.53292 4.40125 6.27064 5.18807L6 6"
                                        stroke="#ffffff" stroke-width="2" stroke-linecap="round"
                                        stroke-linejoin="round"></path>
                                </g>
                            </svg>
                            Đưa vào thùng rác
                        </button>
                        <div class="group relative">
                            <input type="text" placeholder="Tìm kiếm..." id="customSearchInput"
                                class="peer form-input ltr:pr-8 rtl:pl-8">
                            <div
                                class="absolute top-1/2 -translate-y-1/2 peer-focus:text-primary ltr:right-[11px] rtl:left-[11px]">
                                <svg width="24" height="24" viewbox="0 0 24 24" fill="none"
                                    xmlns="http://www.w3.org/2000/svg" class="h-4 w-4">
                                    <circle cx="11.5" cy="11.5" r="9.5" stroke="currentColor" stroke-width="1.5"
                                        opacity="0.5"></circle>
                                    <path d="M18.5 18.5L22 22" stroke="currentColor" stroke-width="1.5"
                                        stroke-linecap="round"></path>
                                </svg>
                            </div>
                        </div>
                    </div>
                    <div class="flex w-1/2 flex-col gap-4 sm:w-auto sm:flex-row sm:items-center sm:gap-3">
                        <div class="flex gap-3">
                            <button type="button" class="btn btn-primary gap-2" @@click="print">
                                <svg width="24" height="24" viewbox="0 0 24 24" fill="none"
                                    xmlns="http://www.w3.org/2000/svg" class="h-5 w-5">
                                    <path
                                        d="M6 17.9827C4.44655 17.9359 3.51998 17.7626 2.87868 17.1213C2 16.2426 2 14.8284 2 12C2 9.17157 2 7.75736 2.87868 6.87868C3.75736 6 5.17157 6 8 6H16C18.8284 6 20.2426 6 21.1213 6.87868C22 7.75736 22 9.17157 22 12C22 14.8284 22 16.2426 21.1213 17.1213C20.48 17.7626 19.5535 17.9359 18 17.9827"
                                        stroke="currentColor" stroke-width="1.5"></path>
                                    <path opacity="0.5" d="M9 10H6" stroke="currentColor" stroke-width="1.5"
                                        stroke-linecap="round"></path>
                                    <path d="M19 14L5 14" stroke="currentColor" stroke-width="1.5"
                                        stroke-linecap="round"></path>
                                    <path
                                        d="M18 14V16C18 18.8284 18 20.2426 17.1213 21.1213C16.2426 22 14.8284 22 12 22C9.17157 22 7.75736 22 6.87868 21.1213C6 20.2426 6 18.8284 6 16V14"
                                        stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                    <path opacity="0.5"
                                        d="M17.9827 6C17.9359 4.44655 17.7626 3.51998 17.1213 2.87868C16.2427 2 14.8284 2 12 2C9.17158 2 7.75737 2 6.87869 2.87868C6.23739 3.51998 6.06414 4.44655 6.01733 6"
                                        stroke="currentColor" stroke-width="1.5"></path>
                                    <circle opacity="0.5" cx="17" cy="10" r="1" fill="currentColor"></circle>
                                    <path opacity="0.5" d="M15 16.5H9" stroke="currentColor" stroke-width="1.5"
                                        stroke-linecap="round"></path>
                                    <path opacity="0.5" d="M13 19H9" stroke="currentColor" stroke-width="1.5"
                                        stroke-linecap="round"></path>
                                </svg>
                                In
                            </button>
                            <button type="button" class="btn btn-success gap-2">
                                <svg width="24" height="24" viewbox="0 0 24 24" fill="none"
                                    xmlns="http://www.w3.org/2000/svg" class="h-5 w-5">
                                    <path opacity="0.5"
                                        d="M17 9.00195C19.175 9.01406 20.3529 9.11051 21.1213 9.8789C22 10.7576 22 12.1718 22 15.0002V16.0002C22 18.8286 22 20.2429 21.1213 21.1215C20.2426 22.0002 18.8284 22.0002 16 22.0002H8C5.17157 22.0002 3.75736 22.0002 2.87868 21.1215C2 20.2429 2 18.8286 2 16.0002L2 15.0002C2 12.1718 2 10.7576 2.87868 9.87889C3.64706 9.11051 4.82497 9.01406 7 9.00195"
                                        stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                    <path d="M12 2L12 15M12 15L9 11.5M12 15L15 11.5" stroke="currentColor"
                                        stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                </svg>
                                Tải xuống
                            </button>
                            <div>
                                <a href="/Staff/TreatmentRecords/Trash" class="btn btn-danger">
                                    <svg class="h-5 w-5 ltr:mr-2 rtl:ml-2" viewBox="0 0 24 24" fill="none"
                                        xmlns="http://www.w3.org/2000/svg">
                                        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                        <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round">
                                        </g>
                                        <g id="SVGRepo_iconCarrier">
                                            <path fill-rule="evenodd" clip-rule="evenodd"
                                                d="M10.3094 2.25002H13.6908C13.9072 2.24988 14.0957 2.24976 14.2737 2.27819C14.977 2.39049 15.5856 2.82915 15.9146 3.46084C15.9978 3.62073 16.0573 3.79961 16.1256 4.00494L16.2373 4.33984C16.2562 4.39653 16.2616 4.41258 16.2661 4.42522C16.4413 4.90933 16.8953 5.23659 17.4099 5.24964C17.4235 5.24998 17.44 5.25004 17.5001 5.25004H20.5001C20.9143 5.25004 21.2501 5.58582 21.2501 6.00004C21.2501 6.41425 20.9143 6.75004 20.5001 6.75004H3.5C3.08579 6.75004 2.75 6.41425 2.75 6.00004C2.75 5.58582 3.08579 5.25004 3.5 5.25004H6.50008C6.56013 5.25004 6.5767 5.24998 6.59023 5.24964C7.10488 5.23659 7.55891 4.90936 7.73402 4.42524C7.73863 4.41251 7.74392 4.39681 7.76291 4.33984L7.87452 4.00496C7.94281 3.79964 8.00233 3.62073 8.08559 3.46084C8.41453 2.82915 9.02313 2.39049 9.72643 2.27819C9.90445 2.24976 10.093 2.24988 10.3094 2.25002ZM9.00815 5.25004C9.05966 5.14902 9.10531 5.04404 9.14458 4.93548C9.1565 4.90251 9.1682 4.86742 9.18322 4.82234L9.28302 4.52292C9.37419 4.24941 9.39519 4.19363 9.41601 4.15364C9.52566 3.94307 9.72853 3.79686 9.96296 3.75942C10.0075 3.75231 10.067 3.75004 10.3553 3.75004H13.6448C13.9331 3.75004 13.9927 3.75231 14.0372 3.75942C14.2716 3.79686 14.4745 3.94307 14.5842 4.15364C14.605 4.19363 14.626 4.2494 14.7171 4.52292L14.8169 4.82216L14.8556 4.9355C14.8949 5.04405 14.9405 5.14902 14.992 5.25004H9.00815Z"
                                                fill="#ffffff"></path>
                                            <path
                                                d="M5.91509 8.45015C5.88754 8.03685 5.53016 7.72415 5.11686 7.7517C4.70357 7.77925 4.39086 8.13663 4.41841 8.54993L4.88186 15.5017C4.96736 16.7844 5.03642 17.8205 5.19839 18.6336C5.36679 19.4789 5.65321 20.185 6.2448 20.7385C6.8364 21.2919 7.55995 21.5308 8.4146 21.6425C9.23662 21.7501 10.275 21.7501 11.5606 21.75H12.4395C13.7251 21.7501 14.7635 21.7501 15.5856 21.6425C16.4402 21.5308 17.1638 21.2919 17.7554 20.7385C18.347 20.185 18.6334 19.4789 18.8018 18.6336C18.9638 17.8206 19.0328 16.7844 19.1183 15.5017L19.5818 8.54993C19.6093 8.13663 19.2966 7.77925 18.8833 7.7517C18.47 7.72415 18.1126 8.03685 18.0851 8.45015L17.6251 15.3493C17.5353 16.6971 17.4713 17.6349 17.3307 18.3406C17.1943 19.025 17.004 19.3873 16.7306 19.6431C16.4572 19.8989 16.083 20.0647 15.391 20.1552C14.6776 20.2485 13.7376 20.25 12.3868 20.25H11.6134C10.2626 20.25 9.32255 20.2485 8.60915 20.1552C7.91715 20.0647 7.54299 19.8989 7.26958 19.6431C6.99617 19.3873 6.80583 19.025 6.66948 18.3406C6.52892 17.6349 6.46489 16.6971 6.37503 15.3493L5.91509 8.45015Z"
                                                fill="#ffffff"></path>
                                            <path
                                                d="M9.42546 10.2538C9.83762 10.2125 10.2052 10.5133 10.2464 10.9254L10.7464 15.9254C10.7876 16.3376 10.4869 16.7051 10.0747 16.7463C9.66256 16.7875 9.29503 16.4868 9.25381 16.0747L8.75381 11.0747C8.7126 10.6625 9.01331 10.295 9.42546 10.2538Z"
                                                fill="#ffffff"></path>
                                            <path
                                                d="M14.5747 10.2538C14.9869 10.295 15.2876 10.6625 15.2464 11.0747L14.7464 16.0747C14.7052 16.4868 14.3376 16.7875 13.9255 16.7463C13.5133 16.7051 13.2126 16.3376 13.2538 15.9254L13.7538 10.9254C13.795 10.5133 14.1626 10.2125 14.5747 10.2538Z"
                                                fill="#ffffff"></path>
                                        </g>
                                    </svg>
                                    Thùng rác
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="filter-divider">
                    <span>Bộ lọc</span>
                </div>

                <div class="flex flex-col gap-2 w-full mt-4">
                    <div class="flex flex-col sm:flex-row gap-5 mb-2 justify-center items-center">
                        <div class="w-56">
                            <select id="filterStatus" class="form-input choices w-full mt-1 p-2 border rounded">
                                <option value="">Chọn trạng thái...</option>
                                @foreach (var s in ViewBag.TreatmentStatus)
                                {
                                    <option value="@s.Value">@s.Text</option>
                                }
                            </select>
                        </div>
                        <div class="w-32">
                            <button id="btnFilter" type="button" class="btn btn-primary w-full">
                                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mr-2" width="20" height="20"
                                    fill="none" viewBox="0 0 24 24">
                                    <path d="M4 5h16M6 10h12M9 15h6M10 20h4" stroke="currentColor" stroke-width="2"
                                        stroke-linecap="round" />
                                </svg>
                                Lọc
                            </button>
                        </div>
                        <div class="w-32">
                            <button id="btnResetFilter" type="button" class="btn btn-secondary w-full" disabled
                                style="cursor: not-allowed;">
                                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mr-2" width="18" height="18"
                                    fill="none" viewBox="0 0 24 24">
                                    <path d="M6 18L18 6M6 6l12 12" stroke="currentColor" stroke-width="2"
                                        stroke-linecap="round" />
                                </svg>
                                Hủy lọc
                            </button>
                        </div>
                        <div class="w-40">
                            <button id="btnAdvancedFilter" type="button" class="btn btn-info filter-bar-item w-full">
                                <svg xmlns="http://www.w3.org/2000/svg" class="inline-block mr-2" width="20" height="20"
                                    fill="none" viewBox="0 0 24 24">
                                    <path d="M3 5h18M6 9h12M9 13h6M10.5 17h3" stroke="currentColor" stroke-width="2"
                                        stroke-linecap="round" />
                                    <path d="M8 21h8" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                        opacity="0.5" />
                                </svg>
                                Lọc nâng cao
                            </button>
                        </div>
                    </div>
                </div>
                <!-- FILTER BAR END -->
                <div id="advancedFilter" class="flex justify-center gap-4" style="display:none;">
                    <div>
                        <input id="filterDateFrom" type="text" class="form-input flatpickr w-56"
                            placeholder="Từ ngày..." autocomplete="off" />
                    </div>
                    <div>
                        <input id="filterDateTo" type="text" class="form-input flatpickr w-56" placeholder="Đến ngày..."
                            autocomplete="off" />
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="myTable" class="table-striped table-hover"></table>
                </div>
            </div>
        </div>
    </div>
</form>

<div id="prescriptionModal" class="fixed inset-0 z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-5xl p-6 relative modal-content-animate">
        <div class="text-2xl font-bold text-primary text-center mb-4">Thêm đơn thuốc</div>
        <div id="prescriptionModalBody">
            <div class="mb-4 flex gap-4">
                <div class="w-1/2">
                    <label for="prescriptionRecordCode" class="block font-semibold mb-1">Mã phiếu điều trị</label>
                    <input type="text" id="prescriptionRecordCode" class="form-input w-full" readonly>
                </div>
                <div class="w-1/2">
                    <label for="prescriptionRecordPatient" class="block font-semibold mb-1">Tên bệnh nhân</label>
                    <input type="text" id="prescriptionRecordPatient" class="form-input w-full" readonly>
                </div>
                <div class="w-1/2">
                    <label for="prescriptionCreatedDate" class="block font-semibold mb-1">Ngày lập đơn thuốc</label>
                    <input type="text" id="prescriptionCreatedDate" class="form-input w-full flatpickr" value="@DateTime.Now.ToString("dd/MM/yyyy")" readonly>
                </div>
            </div>
            <div class="mb-4">
                <label for="prescriptionNote" class="block font-semibold mb-1">Ghi chú</label>
                <textarea id="prescriptionNote" class="form-input w-full" placeholder="Nhập ghi chú..." style="resize: none; min-height: 60px; max-height: 120px; height: 80px;"></textarea>
            </div>
            <div class="table-responsive mt-6">
                <table class="table-striped w-full">
                    <thead>
                        <tr>
                            <th style="text-align: center; font-weight: bold;">Tên thuốc</th>
                            <th style="text-align: center; font-weight: bold;">Số lượng</th>
                            <th style="text-align: center; font-weight: bold;">Đơn giá</th>
                            <th style="text-align: center; font-weight: bold;">Thành tiền</th>
                            <th style="text-align: center; font-weight: bold;"></th>
                        </tr>
                    </thead>
                    <tbody id="prescriptionItemsBody">
                    </tbody>
                </table>
            </div>
            <div class="mt-6 flex flex-col sm:flex-row justify-between px-4">
                <button type="button" class="btn btn-primary mb-4 sm:mb-0" id="btnAddMedicine">Thêm thuốc</button>
                <div class="sm:w-2/5">
                    <div class="flex items-center justify-between" style="font-weight: bold;">
                        <div>Tổng tiền</div>
                        <div id="prescriptionTotal">0 VNĐ</div>
                    </div>
                </div>
            </div>
        </div>
        <div style="display: flex; justify-content: center; gap: 24px;">
            <button class="btn btn-primary btn-save">Lưu</button>
            <button id="closePrescriptionModal" class="btn btn-secondary">Đóng</button>
        </div>
    </div>
</div>

<div id="suspendModal" class="fixed inset-0 z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-5xl p-6 relative modal-content-animate">
        <div class="text-2xl font-bold text-primary text-center mb-4">Đình chỉ phiếu điều trị</div>
        <div id="suspendModalBody">
            <form id="suspendForm">
                <div class="mb-4 flex gap-4">
                    <div class="w-1/2">
                        <label for="suspendRecordCode" class="block font-semibold mb-1">Mã phiếu</label>
                        <input type="text" id="suspendRecordCode" class="form-input w-full" readonly>
                    </div>                    
                    <div class="w-1/2">
                        <label for="suspendPatientName" class="block font-semibold mb-1">Bệnh nhân</label>
                        <input type="text" id="suspendPatientName" class="form-input w-full" readonly>
                    </div>
                    <div class="w-1/2">
                        <label for="suspendStaffName" class="block font-semibold mb-1">Người thực hiện đình chỉ</label>
                        <input type="text" id="suspendStaffName" class="form-input w-full" readonly>
                    </div>                    
                    <div class="w-1/2">
                        <label for="suspendDate" class="block font-semibold mb-1">Ngày đình chỉ</label>
                        <input type="text" id="suspendDate" class="form-input w-full flatpickr" value="@DateTime.Now.ToString("dd/MM/yyyy")" readonly>
                    </div>
                </div>
                <div class="mb-4">
                    <label for="suspendReason" class="block font-semibold mb-1">Lý do đình chỉ</label>
                    <select id="suspendReason" class="form-input w-full">
                        <option value="">Chọn lý do đình chỉ</option>
                        <option value="1">Vi phạm quy định: Tự ý bỏ điều trị từ 3 ngày trong 1 đợt điều trị</option>
                        <option value="2">Bệnh nhân mong muốn xuất viện sớm</option>
                    </select>
                </div>
                <div class="mb-4">
                    <label for="suspendNote" class="block font-semibold mb-1">Ghi chú đình chỉ</label>
                    <textarea id="suspendNote" class="form-input w-full" placeholder="Nhập ghi chú..." style="resize: none; min-height: 60px; max-height: 120px; height: 80px;"></textarea>
                </div>
            </form>
        </div>
        <div style="display: flex; justify-content: center; gap: 24px;">
            <button class="btn btn-primary btn-confirm">Xác nhận đình chỉ</button>
            <button id="closeSuspendModal" class="btn btn-secondary">Đóng</button>
        </div>
    </div>
</div>

<style>
    .modal-content-animate {
        animation: modalFadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    #prescriptionModal.closing .modal-content-animate {
        animation: modalFadeOut 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }
    #suspendModal.closing .modal-content-animate {
        animation: modalFadeOut 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }
    @@keyframes modalFadeIn {
        from {
            opacity: 0;
            transform: scale(0.95);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }
    @@keyframes modalFadeOut {
        from {
            opacity: 1;
            transform: scale(1);
        }
        to {
            opacity: 0;
            transform: scale(0.95);
        }
    }
    #prescriptionModal {
        background: rgba(30, 41, 59, 0.2);
        backdrop-filter: blur(6px);
        -webkit-backdrop-filter: blur(6px);
    }
    #suspendModal {
        background: rgba(30, 41, 59, 0.2);
        backdrop-filter: blur(6px);
        -webkit-backdrop-filter: blur(6px);
    }
    .bg-modal-blur {
        background: rgba(30, 41, 59, 0.2);
        backdrop-filter: blur(6px);
        -webkit-backdrop-filter: blur(6px);
    }
</style>

<script src="~/Public/assets/js/simple-datatables.js"></script>

<script>
    window.currentStaffName = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.CurrentEmployeeName ?? ""));
    window.currentStaffCode = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.CurrentEmployeeCode ?? ""));
</script>

<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('list', () => ({
            entityList: @Html.Raw(Json.Serialize(Model)),
            filteredList: [],
            selectedRows: [],
            datatable: null,

            init() {
                if (!Array.isArray(this.entityList)) {
                    this.entityList = [];
                }
                this.filteredList = [...this.entityList];
                window.list = this;
                this.initializeTable();
                this.setupChoices();

                document.querySelector('#myTable thead').addEventListener('change', (e) => {
                    if (e.target.type === 'checkbox') {
                        this.selectedRows = [];
                        const checkboxes = document.querySelectorAll('#myTable tbody input[type="checkbox"]');
                        checkboxes.forEach(checkbox => {
                            checkbox.checked = e.target.checked;
                            if (e.target.checked) {
                                if (!this.selectedRows.includes(checkbox.value)) {
                                    this.selectedRows.push(checkbox.value);
                                }
                            }
                        });
                    }
                });

                document.querySelector('#myTable tbody').addEventListener('change', (e) => {
                    if (e.target.type === 'checkbox') {
                        const checkbox = e.target;
                        const id = checkbox.value;
                        if (checkbox.checked) {
                            if (!this.selectedRows.includes(id)) {
                                this.selectedRows.push(id);
                            }
                        } else {
                            this.selectedRows = this.selectedRows.filter(rowId => rowId !== id);
                        }
                        const allCheckboxes = document.querySelectorAll('#myTable tbody input[type="checkbox"]');
                        const allChecked = Array.from(allCheckboxes).every(chk => chk.checked);
                        const mainCheckbox = document.querySelector('#myTable thead input[type="checkbox"]');
                        mainCheckbox.checked = allChecked;
                    }
                });

                document.querySelector('#myTable tbody').addEventListener('click', (e) => {
                    const deleteBtn = e.target.closest('.delete-btn');
                    if (deleteBtn) {
                        const id = deleteBtn.getAttribute('data-id');
                        this.moveSingleToTrash(id);
                    }
                    const addBtn = e.target.closest('.add-prescription-btn');
                    const suspendBtn = e.target.closest('.open-suspended-modal');
                    const editBtn = e.target.closest('.edit-treatment-btn');
                    if (addBtn) {
                        const status = Number(addBtn.getAttribute('data-status'));
                        if (status === 2) {
                            notyf.error('Phiếu điều trị đã hoàn thành, không thể thao tác!');
                            return;
                        }
                        if (status === 3) {
                            notyf.error('Phiếu điều trị đã hủy bỏ, không thể thao tác!');
                            return;
                        }
                        const id = addBtn.getAttribute('data-id');
                        document.getElementById('prescriptionModal').classList.remove('hidden', 'closing');
                        const entity = this.entityList.find(e => e.id == id);
                        document.getElementById('prescriptionRecordCode').value = entity ? entity.code : 'Không xác định';
                        document.getElementById('suspendStaffName').value = window.currentStaffName || 'Không xác định';
                        document.getElementById('prescriptionRecordPatient').value = entity ? entity.patientName : 'Không xác định';
                        document.getElementById('prescriptionNote').value = '';
                        document.getElementById('prescriptionCreatedDate').value = new Date().toLocaleDateString('vi-VN');
                        // Reset lại danh sách thuốc mỗi lần mở modal
                        medicines = [];
                        renderMedicines();
                    }
                    if (suspendBtn) {
                        const status = Number(suspendBtn.getAttribute('data-status'));
                        if (status === 2) {
                            notyf.error('Phiếu điều trị đã hoàn thành, không thể thao tác!');
                            return;
                        }
                        if (status === 3) {
                            notyf.error('Phiếu điều trị đã hủy bỏ, không thể thao tác!');
                            return;
                        }
                        const id = suspendBtn.getAttribute('data-id');
                        const entity = this.entityList.find(e => e.id == id);
                        
                        // Kiểm tra xem bác sĩ hiện tại có trong danh sách phân công không
                        if (!entity.assignments || !entity.assignments.some(a => a.createdBy === window.currentStaffCode)) {
                            notyf.error('Bạn không có quyền đình chỉ phiếu điều trị này. Chỉ bác sĩ được phân công mới có quyền đình chỉ.');
                            return;
                        }

                        document.getElementById('suspendModal').classList.remove('hidden', 'closing');
                        // Gán thông tin vào modal
                        document.getElementById('suspendRecordCode').value = entity ? entity.code : 'Không xác định';
                        document.getElementById('suspendPatientName').value = entity ? entity.patientName : 'Không xác định';
                        document.getElementById('suspendDate').value = new Date().toLocaleDateString('vi-VN');
                        // Người thực hiện đình chỉ (bác sĩ đang đăng nhập)
                        document.getElementById('suspendStaffName').value = window.currentStaffName || 'Không xác định';

                        // Reset các trường còn lại nếu cần
                        document.getElementById('suspendReason').value = '';
                        document.getElementById('suspendNote').value = '';
                    }                     
                    if (editBtn) {
                        const status = Number(editBtn.getAttribute('data-status'));
                        if (status === 2) {
                            notyf.error('Phiếu điều trị đã hoàn thành, không thể thao tác!');
                            e.preventDefault && e.preventDefault();
                            return;
                        }
                        if (status === 3) {
                            notyf.error('Phiếu điều trị đã hủy bỏ, không thể thao tác!');
                            e.preventDefault && e.preventDefault();
                            return;
                        }
                    }
                });
            },

            setupChoices() {
                const selectElements = document.querySelectorAll('.choices');
                selectElements.forEach(select => {
                    new Choices(select, {
                        searchEnabled: true,
                        searchPlaceholderValue: 'Tìm kiếm...',
                        removeItemButton: true,
                        noResultsText: 'Không tìm thấy kết quả',
                        noChoicesText: 'Không có lựa chọn nào',
                        itemSelectText: ''
                    });
                });
            },    

            initializeTable() {
                const tableData = this.filteredList.map(entity => [
                    `<input type="checkbox" class="form-checkbox" value="${entity.id}" />`,
                    entity.code,
                    entity.patientName || 'Không có dữ liệu',
                    `${entity.startDate ? new Date(entity.startDate).toLocaleDateString('vi-VN') : 'Không xác định'} - ${entity.endDate ? new Date(entity.endDate).toLocaleDateString('vi-VN') : 'Không xác định'}`,
                    getTreatmentRecordStatusBadge(entity.status),
                    entity.isActive ?
                        '<svg x-tooltip="Đang hoạt động" class="w-5 h-5 mx-auto" width="24" height="24" fill="#000000" viewBox="0 0 14 14" role="img" focusable="false" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill="green" d="M13 4.1974q0 .3097-.21677.5265L7.17806 10.329l-1.0529 1.0529q-.21677.2168-.52645.2168-.30968 0-.52645-.2168L4.01935 10.329 1.21677 7.5264Q1 7.3097 1 7t.21677-.5265l1.05291-1.0529q.21677-.2167.52645-.2167.30968 0 .52645.2167l2.27613 2.2839 5.07871-5.0864q.21677-.2168.52645-.2168.30968 0 .52645.2168l1.05291 1.0529Q13 3.8877 13 4.1974z"></path></g></svg>'
                        :
                        '<svg x-tooltip="Không hoạt động" class="w-5 h-5 mx-auto" width="24" height="24" fill="#000000" viewBox="0 0 14 14" role="img" focusable="false" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill="red" d="M13 10.65657q0 .40404-.28283.68686l-1.37374 1.37374Q11.06061 13 10.65657 13t-.68687-.28283L7 9.74747l-2.9697 2.9697Q3.74747 13 3.34343 13q-.40404 0-.68686-.28283l-1.37374-1.37374Q1 11.06061 1 10.65657t.28283-.68687L4.25253 7l-2.9697-2.9697Q1 3.74747 1 3.34343q0-.40404.28283-.68686l1.37374-1.37374Q2.93939 1 3.34343 1t.68687.28283L7 4.25253l2.9697-2.9697Q10.25253 1 10.65657 1q.40404 0 .68686.28283l1.37374 1.37374Q13 2.93939 13 3.34343t-.28283.68687L9.74747 7l2.9697 2.9697Q13 10.25253 13 10.65657z"></path></g></svg>',
                    `<div class="flex gap-4">
                        <a href="javascript:;" class="hover:text-primary add-prescription-btn${(entity.status === 2 || entity.status === 3) ? ' disabled' : ''}" x-tooltip="Thêm đơn thuốc" data-id="${entity.id}" data-status="${entity.status}">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M17.8445 6.15547C17.8445 6.15547 17.4119 8.39999 14.9057 10.9061C12.3996 13.4123 10.1555 13.8445 10.1555 13.8445M20.4075 16.4075C18.2843 18.5308 14.8418 18.5308 12.7185 16.4075L7.59246 11.2815C5.46918 9.15824 5.46918 5.71573 7.59246 3.59246C9.71573 1.46918 13.1582 1.46918 15.2815 3.59246L20.4075 8.71849C22.5308 10.8418 22.5308 14.2843 20.4075 16.4075Z" stroke="currentColor" stroke-width="1.5"/>
                                <path opacity="0.5" d="M14.5 6.5L13 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                                <path opacity="0.5" d="M6.73022 10.1348C4.02637 10.7173 2 13.1221 2 16.0001C2 19.3139 4.68629 22.0001 8 22.0001C10.8911 22.0001 13.3046 19.9553 13.8732 17.2331" stroke="currentColor" stroke-width="1.5"/>
                            </svg>
                        </a>
                        <a  href="javascript:;" 
                            class="hover:text-secondary open-suspended-modal${(entity.status === 2 || entity.status === 3) ? ' disabled' : ''}" 
                            x-tooltip="Đình chỉ phiếu" 
                            data-id="${entity.id}"
                            data-patient="${entity.patientName}"
                            data-code="${entity.code}" data-status="${entity.status}">
                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M12 7V13" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                            <circle cx="12" cy="16" r="1" fill="currentColor"/>
                            <path opacity="0.5" d="M7.84308 3.80211C9.8718 2.6007 10.8862 2 12 2C13.1138 2 14.1282 2.6007 16.1569 3.80211L16.8431 4.20846C18.8718 5.40987 19.8862 6.01057 20.4431 7C21 7.98943 21 9.19084 21 11.5937V12.4063C21 14.8092 21 16.0106 20.4431 17C19.8862 17.9894 18.8718 18.5901 16.8431 19.7915L16.1569 20.1979C14.1282 21.3993 13.1138 22 12 22C10.8862 22 9.8718 21.3993 7.84308 20.1979L7.15692 19.7915C5.1282 18.5901 4.11384 17.9894 3.55692 17C3 16.0106 3 14.8092 3 12.4063V11.5937C3 9.19084 3 7.98943 3.55692 7C4.11384 6.01057 5.1282 5.40987 7.15692 4.20846L7.84308 3.80211Z" stroke="currentColor" stroke-width="1.5"/>
                            </svg>                        
                        </a>                    
                        <a href="/Staff/Receptions/Edit/${entity.id}" class="hover:text-info edit-treatment-btn${(entity.status === 2 || entity.status === 3) ? ' disabled' : ''}" x-tooltip="Chỉnh sửa" data-id="${entity.id}" data-status="${entity.status}">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5">
                                <path opacity="0.5" d="M22 10.5V12C22 16.714 22 19.0711 20.5355 20.5355C19.0711 22 16.714 22 12 22C7.28595 22 4.92893 22 3.46447 20.5355C2 19.0711 2 16.714 2 12C2 7.28595 2 4.92893 3.46447 3.46447C4.92893 2 7.28595 2 12 2H13.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                <path d="M17.3009 2.80624L16.652 3.45506L10.6872 9.41993C10.2832 9.82394 10.0812 10.0259 9.90743 10.2487C9.70249 10.5114 9.52679 10.7957 9.38344 11.0965C9.26191 11.3515 9.17157 11.6225 8.99089 12.1646L8.41242 13.9L8.03811 15.0229C7.9492 15.2897 8.01862 15.5837 8.21744 15.7826C8.41626 15.9814 8.71035 16.0508 8.97709 15.9619L10.1 15.5876L11.8354 15.0091C12.3775 14.8284 12.6485 14.7381 12.9035 14.6166C13.2043 14.4732 13.4886 14.2975 13.7513 14.0926C13.9741 13.9188 14.1761 13.7168 14.5801 13.3128L20.5449 7.34795L21.1938 6.69914C22.2687 5.62415 22.2687 3.88124 21.1938 2.80624C20.1188 1.73125 18.3759 1.73125 17.3009 2.80624Z" stroke="currentColor" stroke-width="1.5"></path>
                                <path opacity="0.5" d="M16.6522 3.45508C16.6522 3.45508 16.7333 4.83381 17.9499 6.05034C19.1664 7.26687 20.5451 7.34797 20.5451 7.34797M10.1002 15.5876L8.4126 13.9" stroke="currentColor" stroke-width="1.5"></path>
                            </svg>
                        </a>
                        <a href="/Staff/TreatmentRecords/Details/${entity.id}" class="hover:text-primary" x-tooltip="Xem chi tiết">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-5 h-5">
                                <path opacity="0.5" d="M3.27489 15.2957C2.42496 14.1915 2 13.6394 2 12C2 10.3606 2.42496 9.80853 3.27489 8.70433C4.97196 6.49956 7.81811 4 12 4C16.1819 4 19.028 6.49956 20.7251 8.70433C21.575 9.80853 22 10.3606 22 12C22 13.6394 21.575 14.1915 20.7251 15.2957C19.028 17.5004 16.1819 20 12 20C7.81811 20 4.97196 17.5004 3.27489 15.2957Z" stroke="currentColor" stroke-width="1.5"></path>
                                <path d="M15 12C15 13.6569 13.6569 15 12 15C10.3431 15 9 13.6569 9 12C9 10.3431 10.3431 9 12 9C13.6569 9 15 10.3431 15 12Z" stroke="currentColor" stroke-width="1.5"></path>
                            </svg>
                        </a>
                        <button type="button" class="hover:text-danger delete-btn" data-id="${entity.id}" x-tooltip="Đưa vào thùng rác">
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-5 h-5">
                                <path d="M20.5001 6H3.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                <path d="M18.8334 8.5L18.3735 15.3991C18.1965 18.054 18.108 19.3815 17.243 20.1907C16.378 21 15.0476 21 12.3868 21H11.6134C8.9526 21 7.6222 21 6.75719 20.1907C5.89218 19.3815 5.80368 18.054 5.62669 15.3991L5.16675 8.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                <path opacity="0.5" d="M9.5 11L10 16" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                <path opacity="0.5" d="M14.5 11L14 16" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"></path>
                                <path opacity="0.5" d="M6.5 6C6.55588 6 6.58382 6 6.60915 5.99936C7.43259 5.97849 8.15902 5.45491 8.43922 4.68032C8.44784 4.65649 8.45667 4.62999 8.47434 4.57697L8.57143 4.28571C8.65431 4.03708 8.69575 3.91276 8.75071 3.8072C8.97001 3.38607 9.37574 3.09364 9.84461 3.01877C9.96213 3 10.0932 3 10.3553 3H13.6447C13.9068 3 14.0379 3 14.1554 3.01877C14.6243 3.09364 15.03 3.38607 15.2493 3.8072C15.3043 3.91276 15.3457 4.03708 15.4286 4.28571L15.5257 4.57697C15.5433 4.62992 15.5522 4.65651 15.5608 4.68032C15.841 5.45491 16.5674 5.97849 17.3909 5.99936C17.4162 6 17.4441 6 17.5 6" stroke="currentColor" stroke-width="1.5"></path>
                            </svg>
                        </button>
                    </div>`
                ]);

                this.datatable = new simpleDatatables.DataTable('#myTable', {
                    data: {
                        headings: [
                            '<input type="checkbox" class="form-checkbox" />',
                            'Mã phiếu điều trị',
                            'Tên bệnh nhân',
                            'Thời gian điều trị',
                            'Trạng thái',
                            'Hoạt động',
                            'Thao tác'
                        ],
                        data: tableData
                    },
                    perPage: 10,
                    perPageSelect: [10, 20, 30, 50, 100],
                    firstLast: true,
                    searchable: false,
                    firstText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M13 19L7 12L13 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path opacity="0.5" d="M16.9998 19L10.9998 12L16.9998 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    lastText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M11 19L17 12L11 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/><path opacity="0.5" d="M6.99976 19L12.9998 12L6.99976 5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    prevText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M15 5L9 12L15 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    nextText: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" class="w-4.5 h-4.5 rtl:rotate-180"><path d="M9 5L15 12L9 19" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                    labels: {
                        perPage: "<span class='ml-2'>{select}</span>",
                        noRows: 'Không có dữ liệu'
                    },
                    layout: {
                        top: '{search}',
                        bottom: '{info}{select}{pager}'
                    },
                    columns: [
                        {
                            select: 0,
                            sortable: false,
                            render: (data, cell, row) => {
                                return data;
                            }
                        },
                        {
                            select: 5,
                            sortable: false,
                            render: (data, cell, row) => {
                                return data;
                            }
                        },
                        {
                            select: 6,
                            sortable: false,
                            render: (data, cell, row) => {
                                return data;
                            }
                        }
                    ],
                });
            },

            moveToTrash() {
                if (this.selectedRows.length === 0) {
                    notyf.error('Vui lòng chọn ít nhất một phiếu điều trị để đưa vào thùng rác.');
                    return;
                }

                $.confirm({
                    title: 'Bạn có chắc chắn?',
                    content: 'Bạn có muốn đưa các phiếu điều trị vào thùng rác không?',
                    icon: 'fa fa-question-circle text-blue-500',
                    theme: 'modern',
                    type: 'blue',
                    boxWidth: '400px',
                    useBootstrap: false,
                    buttons: {
                        confirm: {
                            text: 'Có, hãy thực hiện!',
                            btnClass: 'btn-success',
                            action: () => {
                                document.getElementById('selectedIds').value = this.selectedRows.join(',');
                                document.getElementById('indexForm').submit();
                            }
                        },
                        cancel: {
                            text: 'Hủy',
                            btnClass: 'btn-secondary'
                        }
                    }
                });
            },

            moveSingleToTrash(id) {
                $.confirm({
                    title: 'Bạn có chắc chắn?',
                    content: 'Bạn có muốn đưa phiếu điều trị này vào thùng rác không?',
                    icon: 'fa fa-question-circle text-blue-500',
                    theme: 'modern',
                    type: 'blue',
                    boxWidth: '400px',
                    useBootstrap: false,
                    buttons: {
                        confirm: {
                            text: 'Có, hãy thực hiện!',
                            btnClass: 'btn-success',
                            action: () => {
                                document.getElementById('selectedIds').value = id;
                                document.getElementById('indexForm').submit();
                            }
                        },
                        cancel: {
                            text: 'Hủy',
                            btnClass: 'btn-secondary'
                        }
                    }
                });
            }
        }));
    });

    function getTreatmentRecordStatusBadge(status) {
        let text = '';
        let style = '';
        switch (status) {
            case 1: // Đang trong đợt điều trị
                text = 'Đang điều trị';
                style = 'background:#3b82f6;color:white;'; // xanh dương
                break;
            case 2: // Đã hoàn thành đợt điều trị
                text = 'Hoàn thành';
                style = 'background:#22c55e;color:white;'; // xanh lá
                break;
            case 3: // Đã kết thúc
                text = 'Kết thúc';
                style = 'background:#a3a3a3;color:white;'; // xám
                break;
            case 4: // Đã hủy bỏ
                text = 'Hủy bỏ';
                style = 'background:#ef4444;color:white;'; // đỏ
                break;
            default:
                text = 'Không xác định';
                style = 'background:#a3a3a3;color:white;';
        }
        return `<span style="display:inline-block;min-width:80px;text-align:center;${style}border-radius:6px;padding:4px 12px;font-size:13px;font-weight:bold;">${text}</span>`;
    }

    document.getElementById('customSearchInput').addEventListener('input', function () {
        const keyword = removeVietnameseTones(this.value.trim());
        if (window.list) {
            let filtered = window.list.entityList.filter(e =>
                (e.code && removeVietnameseTones(e.code).includes(keyword)) ||
                (e.patientName && removeVietnameseTones(e.patientName).includes(keyword))
            );
            window.list.filteredList = filtered;
            if (window.list.datatable) window.list.datatable.destroy();
            window.list.initializeTable();
        }
    });
    $(document).ready(function () {
        
        updateResetFilterButtonState();

        $('#filterStatus, #filterDateFrom, #filterDateTo').on('change', function () {
            updateResetFilterButtonState();
            if (!$(this).val()) {
                window.list.filteredList = window.list.entityList;
                if (window.list.datatable) window.list.datatable.destroy();
                window.list.initializeTable();
            }
        });
    });

    // Viết lại hàm filterList
    function filterList() {
        const status = $('#filterStatus').val();
        const dateFrom = $('#filterDateFrom').val();
        const dateTo = $('#filterDateTo').val();
        let filtered = window.list.entityList;

        // Lọc theo trạng thái
        if (status) {
            filtered = filtered.filter(e => String(e.status) === String(status));
        }

        // Lọc theo khoảng ngày
        if (dateFrom && dateTo) {
            // Chuyển từ dd/mm/yyyy sang yyyy-mm-dd để so sánh
            const fromParts = dateFrom.split('/');
            const toParts = dateTo.split('/');
            const fromDate = new Date(`${fromParts[2]}-${fromParts[1]}-${fromParts[0]}`);
            const toDate = new Date(`${toParts[2]}-${toParts[1]}-${toParts[0]}`);

            filtered = filtered.filter(e => {
                // e.startDate và e.endDate có thể là chuỗi ISO hoặc Date object
                const start = new Date(e.startDate);
                const end = new Date(e.endDate);
                return start >= fromDate && end <= toDate;
            });
        }

        window.list.filteredList = filtered;
        if (window.list.datatable) window.list.datatable.destroy();
        window.list.initializeTable();
        if (filtered.length > 0) notyf.success('Lọc thành công!');
        else if (filtered.length === 0) notyf.error('Không tìm thấy kết quả phù hợp!');
    }

    // Nút Lọc
    $(document).on('click', '#btnFilter', function () {
        const status = $('#filterStatus').val();
        const dateFrom = $('#filterDateFrom').val();
        const dateTo = $('#filterDateTo').val();

        // Nếu chỉ nhập 1 trong 2 trường khoảng ngày thì báo lỗi
        if ((dateFrom && !dateTo) || (!dateFrom && dateTo)) {
            notyf.error('Vui lòng chọn đầy đủ khoảng thời gian khi lọc nâng cao!');
            return;
        }

        // Nếu nhập đủ cả 2 trường thì kiểm tra logic ngày
        if (dateFrom && dateTo) {
            // Chuyển về dạng yyyy-mm-dd để so sánh
            const fromParts = dateFrom.split('/');
            const toParts = dateTo.split('/');
            const fromDate = new Date(`${fromParts[2]}-${fromParts[1]}-${fromParts[0]}`);
            const toDate = new Date(`${toParts[2]}-${toParts[1]}-${toParts[0]}`);
            if (fromDate > toDate) {
                notyf.error('Khoảng thời gian để lọc không hợp lệ!');
                return;
            }
        }

        if (!status && !dateFrom && !dateTo) {

            notyf.error('Cần chọn ít nhất một trường để lọc!');
            window.list.filteredList = window.list.entityList;
            if (window.list.datatable) window.list.datatable.destroy();
            window.list.initializeTable();
            updateResetFilterButtonState();
            return;
        }
        filterList();
    });

    // Nút Hủy lọc
    $(document).on('click', '#btnResetFilter', function () {
        // Reset input khoảng ngày
        $('#filterDateFrom').val('');
        $('#filterDateTo').val('');
        // Reset Choices.js về mặc định cho từng select
        if (window.activeChoices) {
            window.activeChoices.removeActiveItems();
            window.activeChoices.setChoiceByValue('');
        } else {
            $('#filterStatus').val('').trigger('change');
        }
        window.list.filteredList = window.list.entityList;
        if (window.list.datatable) window.list.datatable.destroy();
        window.list.initializeTable();
        updateResetFilterButtonState();
    });

    function updateResetFilterButtonState() {
        const status = $('#filterStatus').val();
        const dateFrom = $('#filterDateFrom').val();
        const dateTo = $('#filterDateTo').val();
        if (!status && !dateFrom && !dateTo) {
            $('#btnResetFilter').prop('disabled', true).css('cursor', 'not-allowed');
        } else {
            $('#btnResetFilter').prop('disabled', false).css('cursor', 'pointer');
        }
    }

    // Toggle advanced filter
    $(document).on('click', '#btnAdvancedFilter', function () {
        $('#advancedFilter').slideToggle(150);

        setTimeout(function () {
            if ($('#advancedFilter').is(':visible')) {
                // Khi bật lọc nâng cao: disable và xóa giá trị ngày đơn
                $('#filterDate').val('').prop('disabled', true);

                // Khởi tạo lại flatpickr cho 2 input nếu chưa có
                if (!$('#filterDateFrom').hasClass('flatpickr-input')) {
                    flatpickr("#filterDateFrom", {
                        dateFormat: "d/m/Y",
                        allowInput: true,
                    });
                }
                if (!$('#filterDateTo').hasClass('flatpickr-input')) {
                    flatpickr("#filterDateTo", {
                        dateFormat: "d/m/Y",
                        allowInput: true,
                    });
                }
            } else {
                $('#filterDate').prop('disabled', false);

                $('#filterDateFrom').val('');
                $('#filterDateTo').val('');
                if ($('#filterDateFrom')[0]._flatpickr) $('#filterDateFrom')[0]._flatpickr.clear();
                if ($('#filterDateTo')[0]._flatpickr) $('#filterDateTo')[0]._flatpickr.clear();
                updateResetFilterButtonState();
            }
        }, 160);
    });

    $('#filterDate').on('change', function () {
        if ($(this).val()) {
            $('#filterDateFrom').val('');
            $('#filterDateTo').val('');
        }
    });

    $('#filterDateFrom').on('input', function () {
        if (!$(this).val()) {
            if (this._flatpickr) {
                this._flatpickr.clear();
            }
        }
    });

    $('#filterDateTo').on('input', function () {
        if (!$(this).val()) {
            if (this._flatpickr) {
                this._flatpickr.clear();
            }
        }
    });

    document.getElementById('closePrescriptionModal').addEventListener('click', function () {
        const modal = document.getElementById('prescriptionModal');
        modal.classList.add('closing');
        setTimeout(function () {
            modal.classList.add('hidden');
            modal.classList.remove('closing');
        }, 200); // Thời gian trùng với animation out
    });

    let medicines = [];

    const medicineList = @Html.Raw(Json.Serialize(ViewBag.Medicines ?? new List<object>()));

    function renderMedicines() {
        const tbody = document.getElementById('prescriptionItemsBody');
        tbody.innerHTML = medicines.length === 0
            ? `<tr><td colspan="5" class="text-center">Chưa thêm thuốc nào</td></tr>`
            : medicines.map((med, idx) => {
                // Lấy danh sách id thuốc đã chọn ở các dòng khác
                const selectedIds = medicines
                    .filter((m, i) => i !== idx)
                    .map(m => m.medicineId);

                let options = `<option value="">Chọn thuốc</option>`;
                medicineList.forEach(m => {
                    // Nếu thuốc này đã được chọn ở dòng khác thì không render option
                    if (selectedIds.includes(m.id)) return;
                    options += `<option value="${m.id}" data-price="${m.price}" ${med.medicineId == m.id ? 'selected' : ''}>${m.name}</option>`;
                });
                return `
                    <tr>
                        <td>
                            <select class="form-select w-full max-w-xs" data-idx="${idx}" onchange="updateMedicineSelect(${idx}, this)">
                                ${options}
                            </select>
                        </td>
                        <td><input type="number" class="form-input w-full" style="max-width:100px; text-align: center;" value="${med.qty || ''}" min="1" onchange="updateMedicine(${idx}, 'qty', this.value)"></td>
                        <td>
                          <input type="text" class="form-input w-full" style="max-width:150px; text-align: center;" 
                            value="${med.price ? Number(med.price).toLocaleString('vi-VN') + ' VNĐ' : ''}" readonly>
                        </td>
                        <td>${(med.qty && med.price) ? (med.qty * med.price).toLocaleString() + ' VNĐ' : '0 VNĐ'}</td>
                        <td>
                            <button type="button" onclick="removeMedicine(${idx})">
                                <svg width="20" height="20" fill="none" stroke="currentColor" stroke-width="1.5"><line x1="18" y1="6" x2="6" y2="18"/><line x1="6" y1="6" x2="18" y2="18"/></svg>
                            </button>
                        </td>
                    </tr>
                `;
            }).join('');
            
        // Cập nhật tổng tiền
        document.getElementById('prescriptionTotal').innerText =
            medicines.reduce((sum, m) => sum + (Number(m.qty) * Number(m.price) || 0), 0).toLocaleString() + ' VNĐ';
    }

    function updateMedicine(idx, key, value) {
        medicines[idx][key] = value;
        renderMedicines();
    }

    function removeMedicine(idx) {
        medicines.splice(idx, 1);
        renderMedicines();
    }

    function updateMedicineSelect(idx, select) {
        const medicineId = select.value;
        const selected = medicineList.find(m => m.id == medicineId);
        medicines[idx].medicineId = medicineId;
        medicines[idx].name = selected ? selected.name : '';
        medicines[idx].price = selected ? selected.price : 0;
        renderMedicines();
    }

    document.getElementById('btnAddMedicine').onclick = function() {
        medicines.push({ name: '', desc: '', qty: 1, price: 0 });
        renderMedicines();
    };

    document.querySelector('#prescriptionModal .btn-save').addEventListener('click', async function() {
        // Lấy dữ liệu
        const prescriptionDate = document.getElementById('prescriptionCreatedDate').value;
        const note = document.getElementById('prescriptionNote').value;
        const treatmentRecordCode = document.getElementById('prescriptionRecordCode').value;
        // Lấy treatmentRecordId từ entityList (theo code)
        let treatmentRecordId = null;
        if (window.list && window.list.entityList) {
            const found = window.list.entityList.find(e => e.code === treatmentRecordCode);
            if (found) treatmentRecordId = found.id;
        }
        if (!treatmentRecordId) {
            notyf.error('Không xác định được phiếu điều trị!');
            return;
        }
        // Validate thuốc
        if (!medicines.length) {
            notyf.error('Vui lòng thêm ít nhất một thuốc!');
            return;
        }
        // Validate chi tiết từng dòng thuốc
        const invalidMedicine = medicines.some(m =>
            !m.medicineId || Number(m.qty) <= 0 || Number(m.price) <= 0
        );
        if (invalidMedicine) {
            notyf.error('Kiểm tra lại thông tin nhập');
            return;
        }
        // Chuẩn bị dữ liệu thuốc
        const details = medicines
            .filter(m => m.medicineId && Number(m.qty) > 0 && Number(m.price) > 0)
            .map(m => ({
                medicineId: m.medicineId,
                quantity: Number(m.qty),
                unitPrice: Number(m.price),
                note: m.note || ''
            }));
        // Chuẩn bị dữ liệu đơn thuốc
        const data = {
            code: '', // để backend tự sinh
            prescriptionDate: (() => {
                if (!prescriptionDate) return new Date().toISOString();
                const parts = prescriptionDate.split('/');
                if (parts.length === 3) {
                    // dd/MM/yyyy
                    return new Date(parts[2], parts[1] - 1, parts[0]).toISOString();
                }
                return new Date().toISOString();
            })(),
            note: note,
            treatmentRecordId: treatmentRecordId,
            details: details
        };
        // Gọi API
        try {
            const res = await fetch('/api/Prescriptions', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });
            const result = await res.json();
            if (res.ok && result.success) {
                notyf.success(result.message || 'Lưu đơn thuốc thành công!');
                // Đóng modal sau 2 giây
                setTimeout(() => {
                    document.getElementById('closePrescriptionModal').click();
                }, 2000);
            } else {
                notyf.error(result.message || 'Lưu đơn thuốc thất bại!');
            }
        } catch (err) {
            notyf.error('Lỗi kết nối API!');
        }
    });

    document.getElementById('closeSuspendModal').addEventListener('click', function () {
        const modal = document.getElementById('suspendModal');
        modal.classList.add('closing');
        setTimeout(function () {
            modal.classList.add('hidden');
            modal.classList.remove('closing');
        }, 200); // Thời gian trùng với animation out
    });

    // Xử lý nút "Xác nhận đình chỉ"
    document.querySelector('#suspendModal .btn-confirm').addEventListener('click', function() {
        // Lấy dữ liệu từ form
        const treatmentRecordCode = document.getElementById('suspendRecordCode').value;
        const suspendReasonSelect = document.getElementById('suspendReason');
        const suspendReasonText = suspendReasonSelect.options[suspendReasonSelect.selectedIndex].text;
        const suspendReasonValue = suspendReasonSelect.value;
        const suspendNote = document.getElementById('suspendNote').value;
        
        // Tìm treatmentRecordId từ mã phiếu
        let treatmentRecordId = null;
        if (window.list && window.list.entityList) {
            const found = window.list.entityList.find(e => e.code === treatmentRecordCode);
            if (found) treatmentRecordId = found.id;
        }
        
        // Validate dữ liệu
        if (!treatmentRecordId) {
            notyf.error('Không tìm thấy thông tin phiếu điều trị!');
            return;
        }
        
        if (!suspendReasonValue) {
            notyf.error('Vui lòng chọn lý do đình chỉ!');
            return;
        }
        
        // Chuẩn bị dữ liệu gửi API
        const data = {
            treatmentRecordId: treatmentRecordId,
            suspendedReason: suspendReasonText,
            suspendedNote: suspendNote,
            suspendedBy: window.currentStaffName || '',
            suspendedDate: new Date().toISOString()
        };
        const overlay = document.getElementById('loadingOverlay');
        overlay.style.display = 'flex';
        // Gọi API
        fetch('/api/TreatmentSuspendeds/suspend', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(result => {
            if (result.success) {
                overlay.style.display = 'none';
                notyf.success('Đình chỉ phiếu điều trị thành công!');
                // Đóng modal sau 1.5 giây và làm mới trang
                setTimeout(() => {
                    const modal = document.getElementById('suspendModal');
                    modal.classList.add('closing');
                    setTimeout(() => {
                        modal.classList.add('hidden');
                        modal.classList.remove('closing');
                        // Reload trang để cập nhật danh sách
                        window.location.reload();
                    }, 200);
                }, 1500);
            } else {
                overlay.style.display = 'none';
                notyf.error(result.message || 'Đình chỉ phiếu điều trị thất bại!');
            }
        })
        .catch(error => {
            console.log(error);
            overlay.style.display = 'none';
            notyf.error('Đã xảy ra lỗi khi gọi API. Vui lòng thử lại sau!');
        });
    });
</script>

@if (TempData["SuccessMessage"] != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            notyf.success('@Html.Raw(TempData["SuccessMessage"])');
        });
    </script>
}
@if (TempData["ErrorMessage"] != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            notyf.error('@Html.Raw(TempData["ErrorMessage"])');
        });
    </script>
}