@using System.Globalization
@using Project.Extensions
@using Project.Models.Enums
@model Project.Areas.NhanVien.Models.ViewModels.PaymentViewModel
@{
    ViewData["Title"] = "Chi tiết phiếu thanh toán";
    Layout = "~/Views/Shared/_mainAdminLayout.cshtml";
}

<ul class="flex space-x-2 rtl:space-x-reverse">
    <li>
        <a href="javascript:;" class="text-primary hover:underline">Danh mục phiếu thanh toán</a>
    </li>
    <li class="before:content-['/'] ltr:before:mr-1 rtl:before:ml-1">
        <span>Xem chi tiết</span>
    </li>
</ul>

<div x-data="details">
    <div class="mb-3 mt-3 flex flex-wrap items-center justify-between gap-4">
        <div>
            <button type="button"
                    class="btn btn-secondary w-full py-2 bg-gray-500 text-white rounded-lg flex items-center gap-2 hover:bg-gray-600"
                    @@click="goBack()">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                     class="h-5 w-5">
                    <path d="M4 10L3.29289 10.7071L2.58579 10L3.29289 9.29289L4 10ZM21 18C21 18.5523 20.5523 19 20 19C19.4477 19 19 18.5523 19 18L21 18ZM8.29289 15.7071L3.29289 10.7071L4.70711 9.29289L9.70711 14.2929L8.29289 15.7071ZM3.29289 9.29289L8.29289 4.29289L9.70711 5.70711L4.70711 10.7071L3.29289 9.29289ZM4 9L14 9L14 11L4 11L4 9ZM21 16L21 18L19 18L19 16L21 16ZM14 9C17.866 9 21 12.134 21 16L19 16C19 13.2386 16.7614 11 14 11L14 9Z"
                          fill="white" />
                </svg>
                Trở về
            </button>
        </div>
    </div>
    <div class="panel">
        <div>
            <h6 class="mb-5 text-2xl font-bold">Thông tin chi tiết phiếu thanh toán: @Model.Code</h6>
            <hr class="mb-5">
            <div class="flex flex-col sm:flex-row">
                <div class="grid flex-1 grid-cols-1 gap-5 sm:grid-cols-4">
                    <div>
                        <label>Mã phiếu thanh toán</label>
                        <input type="text" class="form-input" value="@Model.Code" readonly>
                    </div>
                    <div>
                        <label>Mã phiếu điều trị</label>
                        <input type="text" value="@Model.TreatmentRecordCode" readonly class="form-input">
                    </div>
                    <div>
                        <label>Tên bệnh nhân</label>
                        <input type="text" value="@Model.PatientName" readonly class="form-input">
                    </div>
                    <div>
                        <label>Ngày lập phiếu thanh toán</label>
                        <input type="text"
                               value="@Model.PaymentDate.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)" readonly
                               class="form-input">
                    </div>
                </div>
            </div>
            <div class="flex flex-col sm:flex-row mt-5">
                <div class="grid flex-1 grid-cols-1 gap-5 sm:grid-cols-4">
                    <div>
                        <label>Số thẻ BHYT</label>
                        <input type="text" value="@(Model.PatientHealthInsuranceNumber ?? "Không có")" readonly
                               class="form-input">
                    </div>
                    <div>
                        <label>Ngày hết hạn</label>
                        <input type="text"
                               value="@(Model.PatientHealthInsuranceExpiredDate != null ? Model.PatientHealthInsuranceExpiredDate.Value.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture) : "Không có")"
                               readonly class="form-input">
                    </div>
                    <div>
                        <label>Nơi đăng ký</label>
                        <input type="text"
                               value="@(Model.PatientHealthInsurancePlaceOfRegistration != null ? EnumExtensions.GetDisplayName(Model.PatientHealthInsurancePlaceOfRegistration) : "Không có")"
                               readonly class="form-input">
                    </div>
                    <div>
                        <label>Tình trạng tuyến thẻ</label>
                        <input type="text"
                               value="@(Model.PatientHealthInsuranceIsRightRoute == null ? "Không có" : (Model.PatientHealthInsuranceIsRightRoute == true ? "Đúng tuyến" : "Không đúng tuyến"))"
                               readonly class="form-input">
                    </div>
                </div>
            </div>
            <div class="mt-5">
                <label>Ghi chú</label>
                <textarea class="form-textarea w-full mt-1 p-2 border rounded min-h-[80px]" style="resize: none;"
                          readonly>@(string.IsNullOrWhiteSpace(Model.Note) ? "Không có ghi chú" : Model.Note)</textarea>
            </div>
            <div class="mt-5">
                <h6 class="mb-3 text-lg font-bold">Danh sách các phương pháp điều trị được chỉ định trong phiếu</h6>
                <div style="max-height: 400px; overflow-y: auto; width: 100%;">
                    <table class="table table-bordered w-full">
                        <thead>
                            <tr>
                                <th style="text-align: center; font-weight: bold; white-space: nowrap;">STT</th>
                                <th style="text-align: center; font-weight: bold; white-space: nowrap;">Khoa</th>
                                <th style="text-align: center; font-weight: bold; white-space: nowrap;">Phòng</th>
                                <th style="text-align: center; font-weight: bold; white-space: nowrap;">Phương pháp điều trị</th>
                                <th style="text-align: center; font-weight: bold; white-space: nowrap;">Chi phí điều trị</th>
                                <th style="text-align: center; font-weight: bold; white-space: nowrap;">Số lần điều trị</th>
                                <th style="text-align: center; font-weight: bold; white-space: nowrap;">Tổng tiền</th>
                                <th style="text-align: center; font-weight: bold; white-space: nowrap;">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var stt = 1;
                                decimal grandTotal = 0;
                            }
                            @foreach (var detail in Model.TreatmentDetails)
                            {
                                var cost = detail.Room?.TreatmentMethod?.Cost ?? 0;
                                var count = detail.TreatmentTrackings?.Count(t => t.Status == TrackingStatus.CoDieuTri) ?? 0;
                                var total = cost * count;
                                grandTotal += total;
                                <tr>
                                    <td style="text-align: center;">@stt</td>
                                    <td>@detail.Room?.Department?.Name</td>
                                    <td>@detail.Room?.Name</td>
                                    <td>@detail.Room?.TreatmentMethod?.Name</td>
                                    <td>@cost.ToString("N0") VNĐ/1 lần</td>
                                    <td>@count lần</td>
                                    <td>@total.ToString("N0") VNĐ</td>
                                    <td class="flex justify-center items-center">
                                        <button type="button" class="btn btn-info btn-sm" onclick="showLogModal('@detail.Id')">Xem nhật ký</button>
                                    </td>
                                </tr>
                                stt++;
                            }
                            <tr>
                                <td colspan="6" style="text-align: right; font-weight: bold;">Tổng tiền sử dụng phương pháp điều trị</td>
                                <td colspan="2" style="font-weight: bold;">@grandTotal.ToString("N0") VNĐ</td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="mt-5">
                <h6 class="mb-3 text-lg font-bold">Danh sách đơn thuốc được kê tại phiếu</h6>
                <div style="max-height: 400px; overflow-y: auto; width: 100%;">
                    <table class="table table-bordered w-full">
                        <thead>
                            <tr>
                                <th style="text-align:center;font-weight:bold;">STT</th>
                                <th style="text-align:center;font-weight:bold;">Mã đơn thuốc</th>
                                <th style="text-align:center;font-weight:bold;">Ngày tạo</th>
                                <th style="text-align:center;font-weight:bold;">Tổng tiền</th>
                                <th style="text-align:center;font-weight:bold;">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                var prescriptionStt = 1;
                                var prescriptionGrandTotal = Model.Prescriptions.Sum(p => p.PrescriptionDetails?.Sum(d => (d.Medicine?.Price ?? 0) * d.Quantity) ?? 0);
                            }
                            @foreach (var prescription in Model.Prescriptions)
                            {
                                <tr>
                                    <td style="text-align:center;">@prescriptionStt</td>
                                    <td>@prescription.Code</td>
                                    <td>@prescription.CreatedDate.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)</td>
                                    <td>@prescription.PrescriptionDetails?.Sum(d => (d.Medicine?.Price ?? 0) * d.Quantity).ToString("N0") VNĐ</td>
                                    <td class="flex justify-center items-center">
                                        <button type="button" class="btn btn-info btn-sm" onclick="showPrescriptionDetail('@prescription.Id', '@prescription.Code')">Xem chi tiết</button>
                                    </td>
                                </tr>
                                prescriptionStt++;
                            }
                            <tr>
                                <td colspan="3" style="text-align: right; font-weight: bold;">Tổng tiền đơn thuốc</td>
                                <td colspan="2" style="font-weight: bold;">@prescriptionGrandTotal.ToString("N0") VNĐ</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="mt-5">
                <h6 class="mb-3 text-lg font-bold">Chi tiết các khoản chi phí</h6>
                <table class="table table-bordered w-full">
                    <tbody>
                        <tr>
                            <td>Tổng tiền đơn thuốc</td>
                            <td>@Model.TotalPrescriptionCost.ToString("N0") VNĐ</td>
                        </tr>
                        <tr>
                            <td>Tổng tiền phương pháp điều trị</td>
                            <td>@Model.TotalTreatmentMethodCost.ToString("N0") VNĐ</td>
                        </tr>
                        <tr>
                            <td>Tiền giảm BHYT</td>
                            <td>@Model.InsuranceAmount.ToString("N0") VNĐ</td>
                        </tr>
                        <tr>
                            <td>Tạm ứng</td>
                            <td>@Model.AdvancePayment.ToString("N0") VNĐ</td>
                        </tr>
                        <tr>
                            <td><b>Tổng số tiền cần thanh toán trước khi chưa áp dụng tạm ứng</b></td>
                            <td><b>@((Model.TotalCost - Model.InsuranceAmount).ToString("N0")) VNĐ</b></td>
                        </tr>
                        <tr>
                            <td><b>Tổng số tiền cần thanh toán</b></td>
                            <td><b>@Model.FinalCost.ToString("N0") VNĐ</b></td>
                        </tr>
                        @if (Model.AdvancePayment - (Model.TotalCost - Model.InsuranceAmount) > 0)
                        {
                            <tr>
                                <td><b>Số tiền tạm ứng còn dư</b></td>
                                <td>
                                    <b>
                                        @((Model.AdvancePayment - (Model.TotalCost - Model.InsuranceAmount)).ToString("N0"))
                                        VNĐ
                                    </b>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="flex flex-col sm:flex-row mt-5">
                <div class="grid flex-1 grid-cols-1 gap-5 sm:grid-cols-2">
                    <div>
                        <label>Ngày tạo</label>
                        <input type="text"
                               value="@Model.CreatedDate.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture)" readonly
                               class="form-input">
                    </div>
                    <div>
                        <label>Nguời tạo</label>
                        <input type="text" value="@Model.CreatedByName" readonly class="form-input">
                    </div>
                    <div>
                        <label>Ngày chỉnh sửa</label>
                        <input type="text"
                               value="@(Model.UpdatedDate?.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture) ?? "Không có")"
                               readonly class="form-input">
                    </div>
                    <div>
                        <label>Nguời chỉnh sửa</label>
                        <input type="text" value="@Model.UpdatedByName" readonly class="form-input">
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<!-- Modal nhật ký điều trị -->
<div id="logModal" class="fixed inset-0 z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-5xl p-6 relative modal-content-animate">
        <h2 class="text-2xl font-bold text-primary text-center mb-4">Nhật ký điều trị</h2>
        <button type="button" class="absolute top-2 right-2 text-gray-500 hover:text-red-500 text-2xl font-bold" onclick="closeLogModal()">
            <i class="fa-solid fa-xmark p-2"></i>
        </button>
        <div id="logModalContent"></div>
    </div>
</div>

<!-- Modal chi tiết đơn thuốc -->
<div id="prescriptionModal" class="fixed inset-0 z-50 flex items-center justify-center hidden">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-3xl p-6 relative modal-content-animate">
        <button type="button" class="absolute top-2 right-2 text-gray-500 hover:text-red-500 text-2xl font-bold" onclick="closePrescriptionModal()">
            <i class="fa-solid fa-xmark p-2"></i>
        </button>
        <div id="prescriptionModalContent"></div>
    </div>
</div>

<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('details', () => ({

            goBack() {
                window.location.href = '/thanh-toan';
            }
        }));
    });

    function formatDateVN(dateStr) {
        if (/^\d{4}-\d{2}-\d{2}$/.test(dateStr)) {
            const [y, m, d] = dateStr.split('-');
            return `${d}/${m}/${y}`;
        }
        if (/^\d{2} \d{2} \d{4}$/.test(dateStr)) {
            const [d, m, y] = dateStr.split(' ');
            return `${d}/${m}/${y}`;
        }
        return dateStr;
    }

    function showLogModal(detailId) {
        fetch(`/thanh-toan/get-treatment-tracking?detailId=${detailId}`)
            .then(res => res.json())
            .then(data => {
                function getStatusBadge(status) {
                    if (status == 1)
                        return '<span class="badge badge-success" style="background:#22c55e;color:white;">Có điều trị</span>';
                    if (status == 2)
                        return '<span class="badge badge-warning" style="background:#facc15;color:#92400e;">Xin phép</span>';
                    if (status == 3)
                        return '<span class="badge badge-danger" style="background:#ef4444;color:white;">Không điều trị</span>';
                    return '<span class="badge badge-secondary">Không xác định</span>';
                }
                let html = `
                    <div class=\"flex justify-center items-center gap-x-12 mb-4\">
                        <div><b>Phương pháp điều trị:</b> ${data.methodName}</div>
                        <div><b>Phòng:</b> ${data.roomName}</div>
                    </div>
                    <div style=\"max-height:400px;overflow-y:auto;\">
                        <table class=\"min-w-full table-auto border\">
                            <thead>
                                <tr>
                                    <th style=\"font-weight: bold; text-align: center;\">STT</th>
                                    <th style=\"font-weight: bold; text-align: center;\">Ngày điều trị</th>
                                    <th style=\"font-weight: bold; text-align: center;\">Trạng thái điều trị</th>
                                    <th style=\"font-weight: bold; text-align: center;\">Nhân viên thực hiện</th>
                                    <th style=\"font-weight: bold; text-align: center;\">Ghi chú</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${
                                    data.logs.length === 0
                                    ? `<tr><td colspan=\"5\" style=\"text-align:center; color:#888;\">Chưa có nhật ký điều trị nào</td></tr>`
                                    : data.logs.map((log, idx) => `
                                        <tr>
                                            <td>${idx + 1}</td>
                                            <td>${formatDateVN(log.date)}</td>
                                            <td>${getStatusBadge(log.status)}</td>
                                            <td>${log.staff}</td>
                                            <td>
                                                <input type=\"text\" class=\"form-input\" style=\"width:180px;max-width:100%;font-size:14px;\" readonly
                                                    value=\"${log.note ? log.note : 'Chưa thêm ghi chú'}\" />
                                            </td>
                                        </tr>
                                    `).join('')
                                }
                            </tbody>
                        </table>
                    </div>
                `;
                document.getElementById('logModalContent').innerHTML = html;
                const modal = document.getElementById('logModal');
                modal.classList.remove('hidden', 'closing');
            });
    }

    function closeLogModal() {
        const modal = document.getElementById('logModal');
        modal.classList.add('closing');
        setTimeout(() => {
            modal.classList.add('hidden');
            modal.classList.remove('closing');
        }, 200);
    }

    function showPrescriptionDetail(prescriptionId, prescriptionCode) {
        fetch(`/thanh-toan/get-prescription-detail?prescriptionId=${prescriptionId}`)
            .then(res => res.json())
            .then(data => {
                let html = `
                    <h2 class="text-2xl font-bold text-primary text-center mb-4">
                        Chi tiết đơn thuốc: <span style="color:#2563eb">${prescriptionCode}</span>
                    </h2>
                    <div style="max-height:400px;overflow-y:auto;">
                        <table class="min-w-full table-auto border">
                            <thead>
                                <tr>
                                    <th style="font-weight: bold; text-align: center;">STT</th>
                                    <th style="font-weight: bold; text-align: center;">Tên thuốc</th>
                                    <th style="font-weight: bold; text-align: center;">Số lượng</th>
                                    <th style="font-weight: bold; text-align: center;">Đơn giá</th>
                                    <th style="font-weight: bold; text-align: center;">Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${
                                    data.length === 0
                                    ? `<tr><td colspan="5" style="text-align:center; color:#888;">Không có thuốc nào</td></tr>`
                                    : (() => {
                                        let rows = data.map((item, idx) => `
                                            <tr>
                                                <td>${idx + 1}</td>
                                                <td>${item.medicineName}</td>
                                                <td>${item.quantity}</td>
                                                <td>${item.price.toLocaleString()} VNĐ</td>
                                                <td>${item.total.toLocaleString()} VNĐ</td>
                                            </tr>
                                        `).join('');
                                        let total = data.reduce((sum, item) => sum + item.total, 0);
                                        rows += `
                                            <tr>
                                                <td colspan="4" style="text-align:right;font-weight:bold;">Tổng tiền đơn thuốc</td>
                                                <td style="font-weight:bold;">${total.toLocaleString()} VNĐ</td>
                                            </tr>
                                        `;
                                        return rows;
                                    })()
                                }
                            </tbody>
                        </table>
                    </div>
                `;
                document.getElementById('prescriptionModalContent').innerHTML = html;
                document.getElementById('prescriptionModal').classList.remove('hidden', 'closing');
            });
    }

    function closePrescriptionModal() {
        const modal = document.getElementById('prescriptionModal');
        modal.classList.add('closing');
        setTimeout(() => {
            modal.classList.add('hidden');
            modal.classList.remove('closing');
        }, 200);
    }
</script>

<style>
    .modal-content-animate {
        animation: modalFadeIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    #logModal.closing .modal-content-animate {
        animation: modalFadeOut 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }

    #prescriptionModal.closing .modal-content-animate {
        animation: modalFadeOut 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }

    @@keyframes modalFadeIn {
        from {
            opacity: 0;
            transform: scale(0.95);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    @@keyframes modalFadeOut {
        from {
            opacity: 1;
            transform: scale(1);
        }

        to {
            opacity: 0;
            transform: scale(0.95);
        }
    }

    #logModal {
        background: rgba(30, 41, 59, 0.2);
        backdrop-filter: blur(6px);
        -webkit-backdrop-filter: blur(6px);
    }

    #prescriptionModal {
        background: rgba(30, 41, 59, 0.2);
        backdrop-filter: blur(6px);
        -webkit-backdrop-filter: blur(6px);
    }

    .bg-modal-blur {
        background: rgba(30, 41, 59, 0.2);
        backdrop-filter: blur(6px);
        -webkit-backdrop-filter: blur(6px);
    }
</style>