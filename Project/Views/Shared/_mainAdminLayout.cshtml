<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>@ViewData["Title"]</title>
    <link rel="icon" type="image/x-icon" href="~/Public/assets/images/logo/logo_official.png">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="">
    <link rel="stylesheet" type="text/css" media="screen" href="~/Public/assets/css/nunito-fonts.css">
    <link rel="stylesheet" type="text/css" media="screen" href="~/Public/assets/css/perfect-scrollbar.min.css">
    <link rel="stylesheet" type="text/css" media="screen" href="~/Public/assets/css/style.css">
    <link defer="" rel="stylesheet" type="text/css" media="screen" href="~/Public/assets/css/animate.css">
    <link href="~/Public/assets/dropzone/min/dropzone.min.css" rel="stylesheet" />

    <link href="~/public/assets/css/notyf.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/js/all.min.js"></script>

    <link href="~/public/assets/css/jquery-confirm.min.css" rel="stylesheet" />
    <link href="~/public/assets/css/goong-geocoder.min.css" rel="stylesheet" />
    <link href="~/public/assets/css/goong-js.css" rel="stylesheet" />

    <script src="~/public/assets/dropzone/min/dropzone.min.js"></script>
    <script src="~/Public/assets/js/perfect-scrollbar.min.js"></script>
    <script defer="" src="~/Public/assets/js/popper.min.js"></script>
    <script defer="" src="~/Public/assets/js/tippy-bundle.umd.min.js"></script>
    <script defer="" src="~/Public/assets/js/sweetalert.min.js"></script>
    <script src="~/public/assets/js/jquery-3.7.1.min.js"></script>
    <script src="~/public/assets/js/jquery.validate.min.js"></script>
    <script src="~/public/assets/js/jquery.validate.unobtrusive.min.js"></script>


    <script src="~/public/assets/js/jquery-confirm.min.js"></script>

    <link href="~/public/assets/css/mycss.css" rel="stylesheet" />

    <link href="~/public/assets/css/flatpickr.min.css" rel="stylesheet" />
    <script src="~/public/assets/js/flatpickr.js"></script>

    <link href="~/public/assets/css/choices.min.css" rel="stylesheet" />
    <script src="~/public/assets/js/choices.min.js"></script>
</head>


<body x-data="main" class="relative overflow-x-hidden font-nunito text-sm font-normal antialiased" :class="[ $store.app.sidebar ? 'toggle-sidebar' : '', $store.app.theme === 'dark' || $store.app.isDarkMode ?  'dark' : '', $store.app.menu, $store.app.layout,$store.app.rtlClass]">
    <!-- sidebar menu overlay -->
    <partial name="_SidebarMenuOverlay"/>

    <!-- screen loader -->
    <partial name="_screenLoader" />

    <!-- scroll to top button -->
    <partial name="_ScrollToTop" />

    <div class="main-container min-h-screen text-black dark:text-white-dark" :class="[$store.app.navbar]">
        <!-- start sidebar section -->
        <partial name="_PatialSidebar" />
        <!-- end sidebar section -->

        <div class="main-content flex min-h-screen flex-col">
            <!-- start header section -->
            <partial name="_PatialHeader" />
            <!-- end header section -->

            <div class="animate__animated p-6" :class="[$store.app.animation]">
                <!-- start main content section -->
                @RenderBody()
                <!-- end main content section -->
            </div>

            <!-- start footer section -->
            <partial name="_PatialFooter" />
            <!-- end footer section -->
        </div>
    </div>


    <script src="~/Public/assets/js/alpine-collaspe.min.js"></script>
    <script src="~/Public/assets/js/alpine-persist.min.js"></script>
    <script defer="" src="~/Public/assets/js/alpine-ui.min.js"></script>
    <script defer="" src="~/Public/assets/js/alpine-focus.min.js"></script>
    <script defer="" src="~/Public/assets/js/alpine.min.js"></script>
    <script src="~/Public/assets/js/custom.js"></script>
    <script defer="" src="~/Public/assets/js/apexcharts.js"></script>
    <script src="~/public/assets/js/notyf.min.js"></script>
    <script src="~/Public/assets/js/simple-datatables.js"></script>
    <script src="~/public/assets/js/cleave.min.js"></script>

    <script src="~/public/assets/js/goong-geocoder.min.js"></script>
    <script src="~/public/assets/js/goong-js.js"></script>
    <script>
        const notyf = new Notyf({
            duration: 2000,
            position: { x: 'right', y: 'top' },
            dismissible: false,
            types: [
              {
                type: 'warning',
                background: 'orange',
                icon: {
                  className: 'material-icons',
                  tagName: 'i',
                  text: 'warning'
                }
              }
            ],
        });

        document.addEventListener('alpine:init', () => {
            Alpine.data('header', () => ({
                init() {

                },
            }));

            // main section
            Alpine.data('scrollToTop', () => ({
                showTopButton: false,
                init() {
                    window.onscroll = () => {
                        this.scrollFunction();
                    };
                },

                scrollFunction() {
                    if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {
                        this.showTopButton = true;
                    } else {
                        this.showTopButton = false;
                    }
                },

                goToTop() {
                    document.body.scrollTop = 0;
                    document.documentElement.scrollTop = 0;
                },
            }));

            // sidebar section
            Alpine.data('sidebar', () => ({
                init() {
                    const selector = document.querySelector('.sidebar ul a[href="' + window.location.pathname + '"]');
                    if (selector) {
                        selector.classList.add('active');
                        const ul = selector.closest('ul.sub-menu');
                        if (ul) {
                            let ele = ul.closest('li.menu').querySelectorAll('.nav-link');
                            if (ele) {
                                ele = ele[0];
                                setTimeout(() => {
                                    ele.click();
                                });
                            }
                        }
                    }
                },
            }));
        });
    </script>

    <script>
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
            return null;
        }

        function checkSessionExpiration() {
            const token = getCookie('AuthToken');
            if (!token) return;

            const cookieExpires = new Date(new Date().getTime() + 30 * 60 * 1000);
            const warningTime = 10 * 1000;

            const checkInterval = setInterval(() => {
                const now = new Date().getTime();
                const timeLeft = cookieExpires.getTime() - now;

                if (timeLeft <= warningTime && timeLeft > 0) {
                    $.confirm({
                        title: 'Phiên làm việc sắp hết hạn',
                        content: 'Bạn sắp hết phiên làm việc. Bạn có muốn tiếp tục làm việc không?',
                        buttons: {
                            continue: {
                                text: 'Tiếp tục',
                                btnClass: 'btn-blue',
                                action: function () {
                                    $.ajax({
                                        url: '/Admin/Account/RefreshToken',
                                        type: 'POST',
                                        success: function (response) {
                                            if (response.success) {
                                                notyf.success('Phiên làm việc đã được gia hạn.');
                                                cookieExpires.setTime(new Date().getTime() + 30 * 60 * 1000);
                                            } else {
                                                notyf.error(response.message);
                                                window.location.href = '/Admin/Account/Login';
                                            }
                                        },
                                        error: function () {
                                            notyf.error('Có lỗi xảy ra khi gia hạn phiên.');
                                            window.location.href = '/Admin/Account/Login';
                                        }
                                    });
                                }
                            },
                            cancel: {
                                text: 'Hủy',
                                btnClass: 'btn-red',
                                action: function () {
                                    document.cookie = 'AuthToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
                                    window.location.href = '/Admin/Account/Login';
                                }
                            }
                        }
                    });
                    clearInterval(checkInterval);
                } else if (timeLeft <= 0) {
                    document.cookie = 'AuthToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
                    window.location.href = '/Admin/Account/Login';
                    clearInterval(checkInterval);
                }
            }, 1000);
        }

        $(document).ready(function () {
            checkSessionExpiration();
        });
    </script>

    <script>
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        document.addEventListener('DOMContentLoaded', () => {
            const addressInputs = document.querySelectorAll('input.address-autocomplete');
            addressInputs.forEach(input => {
                const container = input.closest('.address-container');
                if (!container) {
                    console.warn(`Input ${input.id} must be inside a .address-container`);
                    return;
                }

                const suggestions = document.createElement('div');
                suggestions.className = 'suggestions';
                suggestions.id = `${input.id}-suggestions`;
                container.appendChild(suggestions);

                let sessionToken = crypto.randomUUID();

                const debouncedSearch = debounce((query) => {
                    if (query.length < 2) {
                        suggestions.style.display = 'none';
                        return;
                    }

                    fetch(`/api/Goong/autocomplete?input=${encodeURIComponent(query)}&sessiontoken=${sessionToken}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(data => {
                            if (data.status === 'OK') {
                                suggestions.innerHTML = '';
                                suggestions.style.display = 'block';

                                data.predictions.forEach(prediction => {
                                    const div = document.createElement('div');
                                    div.className = 'suggestion-item';
                                    div.textContent = prediction.description;
                                    div.addEventListener('click', () => {
                                        input.value = prediction.description;
                                        suggestions.style.display = 'none';
                                    });
                                    suggestions.appendChild(div);
                                });
                            }
                        })
                        .catch(error => {
                            notyf.error('Không thể tải gợi ý địa chỉ.');
                        });
                }, 300);

                input.addEventListener('input', (e) => debouncedSearch(e.target.value));

                document.addEventListener('click', (e) => {
                    if (!suggestions.contains(e.target) && e.target !== input) {
                        suggestions.style.display = 'none';
                    }
                });
            });
        });
    </script>
</body>
</html>